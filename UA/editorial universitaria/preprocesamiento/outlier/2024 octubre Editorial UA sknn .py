{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"x6Xuz8cqauYb","executionInfo":{"status":"ok","timestamp":1729796076277,"user_tz":180,"elapsed":17634,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}}},"outputs":[],"source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras #desde tensorflow 2 se importa keras,  como paquete integrado de tensorflow\n","import pandas as pd\n","import numpy as np\n","from math import sqrt\n","from numpy import concatenate\n","from matplotlib import pyplot\n","from pandas import read_csv\n","from pandas import DataFrame\n","from pandas import concat\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import mean_squared_error\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.layers import LSTM, GRU\n","import tensorflow as tf\n","from datetime import datetime\n","from keras.models import Sequential\n","from keras.layers import Dense,Flatten,LSTM,RepeatVector,TimeDistributed\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R_2i5Fw0awOr","executionInfo":{"status":"ok","timestamp":1729796114690,"user_tz":180,"elapsed":38427,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"d4b1e417-08e3-483d-8853-872ba44a0272"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["\n","from google.colab import drive\n","\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":1070,"status":"ok","timestamp":1729796609597,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"},"user_tz":180},"id":"kpkiNaL_boap","outputId":"0c0c5dc9-9eba-4f16-8fda-a54223f91fcd"},"outputs":[{"output_type":"stream","name":"stdout","text":["54450\n","Index(['Fecha', 'Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'desktop', 'mobile', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Linux', 'Android', 'iOS', 'Windows', 'Macintosh', 'Windows Phone',\n","       'Sistema operativo (not set)', 'Chrome OS', 'BlackBerry',\n","       'Sistema operativo promedio', 'Sistema operativo std', 'Direct',\n","       'Organic Search', 'Referral', 'Social',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std'],\n","      dtype='object')\n","0         8 oct 2018\n","1         9 oct 2018\n","2        10 oct 2018\n","3        11 oct 2018\n","4        12 oct 2018\n","            ...     \n","1810    30 sept 2023\n","1811      1 oct 2023\n","1812      2 oct 2023\n","1813      3 oct 2023\n","1814      4 oct 2023\n","Name: Fecha, Length: 1815, dtype: object\n","datetime64[ns]\n","(1815, 30)\n","          Fecha  Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0    2018-10-08                       541.0             22.0      22.0   \n","1    2018-10-09                       226.0             23.0      26.0   \n","2    2018-10-10                       136.0             18.0      24.0   \n","3    2018-10-11                       229.0             11.0      16.0   \n","4    2018-10-12                        60.0             10.0      13.0   \n","...         ...                         ...              ...       ...   \n","1810 2023-09-30                        46.0             32.0      39.0   \n","1811 2023-10-01                        58.0             30.0      35.0   \n","1812 2023-10-02                        88.0             40.0      48.0   \n","1813 2023-10-03                       103.0             44.0      58.0   \n","1814 2023-10-04                       148.0             61.0      73.0   \n","\n","      Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","0                           1.636364      36.0      540.0           1.0   \n","1                           1.346154      35.0      212.0          14.0   \n","2                           1.458333      35.0      133.0           3.0   \n","3                           1.812500      29.0      224.0           5.0   \n","4                           1.461538      19.0       56.0           4.0   \n","...                              ...       ...        ...           ...   \n","1810                        1.102564      43.0       27.0          19.0   \n","1811                        1.028571      36.0       42.0          16.0   \n","1812                        1.104167      53.0       65.0          23.0   \n","1813                        1.137931      66.0       87.0          16.0   \n","1814                        1.123288      82.0      137.0          11.0   \n","\n","      desktop  mobile  ...  Chrome OS  BlackBerry  Sistema operativo promedio  \\\n","0       492.0    49.0  ...        0.0         0.0                   54.099998   \n","1       211.0     8.0  ...        0.0         0.0                   22.600000   \n","2       119.0    17.0  ...        0.0         0.0                   13.600000   \n","3       215.0    14.0  ...        0.0         0.0                   22.900000   \n","4        40.0    20.0  ...        0.0         0.0                    6.000000   \n","...       ...     ...  ...        ...         ...                         ...   \n","1810     25.0    21.0  ...        0.0         0.0                    4.600000   \n","1811     36.0    22.0  ...        0.0         0.0                    5.800000   \n","1812     48.0    40.0  ...        0.0         0.0                    8.800000   \n","1813     74.0    29.0  ...        0.0         0.0                   10.300000   \n","1814    111.0    36.0  ...        0.0         0.0                   14.800000   \n","\n","      Sistema operativo std  Direct  Organic Search  Referral  Social  \\\n","0                118.729485   485.0            41.0      15.0     0.0   \n","1                 41.653812   201.0            25.0       0.0     0.0   \n","2                 23.495531    96.0            40.0       0.0     0.0   \n","3                 41.555866   220.0             9.0       0.0     0.0   \n","4                 11.907981    24.0            14.0      22.0     0.0   \n","...                     ...     ...             ...       ...     ...   \n","1810               6.499231    17.0            25.0       2.0     2.0   \n","1811              10.264502    11.0            44.0       2.0     1.0   \n","1812              16.154257    33.0            49.0       2.0     4.0   \n","1813              21.517668    17.0            71.0       0.0    15.0   \n","1814              24.494081    12.0            97.0       7.0    32.0   \n","\n","      Agrupación de canales predeterminada promedio  \\\n","0                                            135.25   \n","1                                             56.50   \n","2                                             34.00   \n","3                                             57.25   \n","4                                             15.00   \n","...                                             ...   \n","1810                                          11.50   \n","1811                                          14.50   \n","1812                                          22.00   \n","1813                                          25.75   \n","1814                                          37.00   \n","\n","      Agrupación de canales predeterminada std  \n","0                                   202.460342  \n","1                                    84.049095  \n","2                                    39.344631  \n","3                                    94.035568  \n","4                                     9.433981  \n","...                                        ...  \n","1810                                  9.912114  \n","1811                                 17.471405  \n","1812                                 19.836834  \n","1813                                 26.938587  \n","1814                                 35.881752  \n","\n","[1815 rows x 30 columns]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-14-03d68219d032>:34: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n","  dataset[\"Fecha\"]=pd.to_datetime(dataset[\"Fecha\"].replace(mapping_dict, regex=True))#esto porque las fechas como agosto estan ago en español\n"]},{"output_type":"execute_result","data":{"text/plain":["       Fecha  Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0 2018-10-08                       541.0             22.0      22.0   \n","1 2018-10-09                       226.0             23.0      26.0   \n","2 2018-10-10                       136.0             18.0      24.0   \n","3 2018-10-11                       229.0             11.0      16.0   \n","4 2018-10-12                        60.0             10.0      13.0   \n","\n","   Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  desktop  \\\n","0                        1.636364      36.0      540.0           1.0    492.0   \n","1                        1.346154      35.0      212.0          14.0    211.0   \n","2                        1.458333      35.0      133.0           3.0    119.0   \n","3                        1.812500      29.0      224.0           5.0    215.0   \n","4                        1.461538      19.0       56.0           4.0     40.0   \n","\n","   mobile  ...  Chrome OS  BlackBerry  Sistema operativo promedio  \\\n","0    49.0  ...        0.0         0.0                   54.099998   \n","1     8.0  ...        0.0         0.0                   22.600000   \n","2    17.0  ...        0.0         0.0                   13.600000   \n","3    14.0  ...        0.0         0.0                   22.900000   \n","4    20.0  ...        0.0         0.0                    6.000000   \n","\n","   Sistema operativo std  Direct  Organic Search  Referral  Social  \\\n","0             118.729485   485.0            41.0      15.0     0.0   \n","1              41.653812   201.0            25.0       0.0     0.0   \n","2              23.495531    96.0            40.0       0.0     0.0   \n","3              41.555866   220.0             9.0       0.0     0.0   \n","4              11.907981    24.0            14.0      22.0     0.0   \n","\n","   Agrupación de canales predeterminada promedio  \\\n","0                                         135.25   \n","1                                          56.50   \n","2                                          34.00   \n","3                                          57.25   \n","4                                          15.00   \n","\n","   Agrupación de canales predeterminada std  \n","0                                202.460342  \n","1                                 84.049095  \n","2                                 39.344631  \n","3                                 94.035568  \n","4                                  9.433981  \n","\n","[5 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-f4d61166-c937-4c3a-bb1a-c33642844be5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Fecha</th>\n","      <th>Número de vistas de página</th>\n","      <th>Usuarios nuevos</th>\n","      <th>Usuarios</th>\n","      <th>Número de sesiones por usuario</th>\n","      <th>Sesiones</th>\n","      <th>Argentina</th>\n","      <th>Otros Paises</th>\n","      <th>desktop</th>\n","      <th>mobile</th>\n","      <th>...</th>\n","      <th>Chrome OS</th>\n","      <th>BlackBerry</th>\n","      <th>Sistema operativo promedio</th>\n","      <th>Sistema operativo std</th>\n","      <th>Direct</th>\n","      <th>Organic Search</th>\n","      <th>Referral</th>\n","      <th>Social</th>\n","      <th>Agrupación de canales predeterminada promedio</th>\n","      <th>Agrupación de canales predeterminada std</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-10-08</td>\n","      <td>541.0</td>\n","      <td>22.0</td>\n","      <td>22.0</td>\n","      <td>1.636364</td>\n","      <td>36.0</td>\n","      <td>540.0</td>\n","      <td>1.0</td>\n","      <td>492.0</td>\n","      <td>49.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>54.099998</td>\n","      <td>118.729485</td>\n","      <td>485.0</td>\n","      <td>41.0</td>\n","      <td>15.0</td>\n","      <td>0.0</td>\n","      <td>135.25</td>\n","      <td>202.460342</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-10-09</td>\n","      <td>226.0</td>\n","      <td>23.0</td>\n","      <td>26.0</td>\n","      <td>1.346154</td>\n","      <td>35.0</td>\n","      <td>212.0</td>\n","      <td>14.0</td>\n","      <td>211.0</td>\n","      <td>8.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.600000</td>\n","      <td>41.653812</td>\n","      <td>201.0</td>\n","      <td>25.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>56.50</td>\n","      <td>84.049095</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-10-10</td>\n","      <td>136.0</td>\n","      <td>18.0</td>\n","      <td>24.0</td>\n","      <td>1.458333</td>\n","      <td>35.0</td>\n","      <td>133.0</td>\n","      <td>3.0</td>\n","      <td>119.0</td>\n","      <td>17.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>13.600000</td>\n","      <td>23.495531</td>\n","      <td>96.0</td>\n","      <td>40.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>34.00</td>\n","      <td>39.344631</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-10-11</td>\n","      <td>229.0</td>\n","      <td>11.0</td>\n","      <td>16.0</td>\n","      <td>1.812500</td>\n","      <td>29.0</td>\n","      <td>224.0</td>\n","      <td>5.0</td>\n","      <td>215.0</td>\n","      <td>14.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>22.900000</td>\n","      <td>41.555866</td>\n","      <td>220.0</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>57.25</td>\n","      <td>94.035568</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-10-12</td>\n","      <td>60.0</td>\n","      <td>10.0</td>\n","      <td>13.0</td>\n","      <td>1.461538</td>\n","      <td>19.0</td>\n","      <td>56.0</td>\n","      <td>4.0</td>\n","      <td>40.0</td>\n","      <td>20.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6.000000</td>\n","      <td>11.907981</td>\n","      <td>24.0</td>\n","      <td>14.0</td>\n","      <td>22.0</td>\n","      <td>0.0</td>\n","      <td>15.00</td>\n","      <td>9.433981</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4d61166-c937-4c3a-bb1a-c33642844be5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f4d61166-c937-4c3a-bb1a-c33642844be5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f4d61166-c937-4c3a-bb1a-c33642844be5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd74b838-432b-4c5b-9e69-9397612f6cc9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd74b838-432b-4c5b-9e69-9397612f6cc9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd74b838-432b-4c5b-9e69-9397612f6cc9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset"}},"metadata":{},"execution_count":14}],"source":["#Reading the data set, parsing the dates and inferring the date format to date time. We also fill the Nan’s with 0.\n","#agrego index_col=0 para solucionar Unnamed: 0 porque https://stackoverflow.com/questions/43983622/remove-unnamed-columns-in-pandas-dataframe\n","dataset = read_csv(\"/content/drive/MyDrive/a Tesis de Grado/Tesis Versiones/tesis 2024/UA/editorial universitaria/preprocesamiento/datos2023/UA2018SalidaEditorialUniversitaria.csv\", index_col=0)\n","#dataset.fillna(0, inplace=True)//pasar nans a ceros\n","#revisar lo que hago en el otro dataset\n","print(dataset.size)\n","print(dataset.columns)\n","columnaAPreadecir='Número de vistas de página'\n","\n","for i in dataset.columns:\n","  if i != 'Fecha':\n","    dataset[i]= dataset[i].values.astype('float32')# ensure all data is float excepto la columna fecha\n","    #print(i,dataset[i].dtype)\n","print(dataset['Fecha'])\n","import datetime as dt\n","#print(pd.to_datetime(\"20 agos 2015\", format='%d %b %Y', date_parser=dateparser.parse))\n","from dateutil.parser import parse\n","def parsefecha(date):\n","  dt = parse(date)\n","  print(date)\n","  return date\n","mapping_dict = {'ene':'JAN',\n","'feb':'FEB',\n","'mar':'MAR',\n","'abr':'APR',\n","'may':'MAY',\n","'jun':'JUN',\n","'jul':'JUL',\n","'ago':'AUG',\n","'sept':'SEP',\n","'oct':'OCT',\n","'nov':'NOV',\n","'dic':'DEC'}#https://stackoverflow.com/questions/70374750/convert-spanish-date-into-a-pandas-datetime-object\n","dataset[\"Fecha\"]=pd.to_datetime(dataset[\"Fecha\"].replace(mapping_dict, regex=True))#esto porque las fechas como agosto estan ago en español\n","print(dataset[\"Fecha\"].dtype)\n","#dataset['Fecha'] = pd.to_datetime(dataset['Fecha'], format='%d %b %Y')\n","#dataset['Fecha']=dataset['Fecha'].apply(parsefecha)\n","#dataset.drop([\"Fecha Inicio\"], inplace=True, axis=1)\n","#for i in dataset[\"Fecha\"]:\n","#  print(i,dataset[\"Fecha\"].dtype)\n","print(dataset.shape)\n","print(dataset)\n","dataset.head()"]},{"cell_type":"code","source":["# import libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.neighbors import NearestNeighbors\n","from copy import deepcopy\n","print('algun nan antes de sacar fechas',dataset.isnull().values.any())\n","fechaColumna=deepcopy(dataset['Fecha'])\n","dataset.drop([\"Fecha\"], inplace=True, axis=1)\n","X = dataset.values\n","#compruebo no hay ni un solo valor NaN en el dataset\n","print('algun nan',dataset.isnull().any())\n","print('algun nan',dataset.isnull().values.any())\n","nan_index = np.where(dataset.isnull())\n","nan_row=dataset.iloc[nan_index]\n","nan_row"],"metadata":{"id":"XmgXZt9_rj5x","executionInfo":{"status":"ok","timestamp":1729796610020,"user_tz":180,"elapsed":18,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"colab":{"base_uri":"https://localhost:8080/","height":680},"outputId":"a792629c-373f-42ce-b960-6ee1f9022817"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["algun nan antes de sacar fechas False\n","algun nan Número de vistas de página                       False\n","Usuarios nuevos                                  False\n","Usuarios                                         False\n","Número de sesiones por usuario                   False\n","Sesiones                                         False\n","Argentina                                        False\n","Otros Paises                                     False\n","desktop                                          False\n","mobile                                           False\n","tablet                                           False\n","Categoría de dispositivo promedio                False\n","Categoría de dispositivo std                     False\n","Linux                                            False\n","Android                                          False\n","iOS                                              False\n","Windows                                          False\n","Macintosh                                        False\n","Windows Phone                                    False\n","Sistema operativo (not set)                      False\n","Chrome OS                                        False\n","BlackBerry                                       False\n","Sistema operativo promedio                       False\n","Sistema operativo std                            False\n","Direct                                           False\n","Organic Search                                   False\n","Referral                                         False\n","Social                                           False\n","Agrupación de canales predeterminada promedio    False\n","Agrupación de canales predeterminada std         False\n","dtype: bool\n","algun nan False\n"]},{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: []\n","Index: []"],"text/html":["\n","  <div id=\"df-0e91f369-ba28-45f7-be6e-bdef8d64fd84\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e91f369-ba28-45f7-be6e-bdef8d64fd84')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0e91f369-ba28-45f7-be6e-bdef8d64fd84 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0e91f369-ba28-45f7-be6e-bdef8d64fd84');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_0d13e7de-79d6-49d9-91a1-f471a8238ae7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('nan_row')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0d13e7de-79d6-49d9-91a1-f471a8238ae7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('nan_row');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"nan_row","summary":"{\n  \"name\": \"nan_row\",\n  \"rows\": 0,\n  \"fields\": []\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# instantiate model\n","nbrs = NearestNeighbors(n_neighbors = 7,metric='euclidean')#con 5\n","\n","# fit model\n","nbrs.fit(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"bz0jdqGYuyEe","executionInfo":{"status":"ok","timestamp":1729796610560,"user_tz":180,"elapsed":65,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"02ffaf74-b141-420e-ca91-e427dbef1677"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["NearestNeighbors(metric='euclidean', n_neighbors=7)"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>NearestNeighbors(metric=&#x27;euclidean&#x27;, n_neighbors=7)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;NearestNeighbors<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.NearestNeighbors.html\">?<span>Documentation for NearestNeighbors</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>NearestNeighbors(metric=&#x27;euclidean&#x27;, n_neighbors=7)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# distances and indexes of k-neaighbors from model outputs\n","distances, indexes = nbrs.kneighbors(X)\n","# plot mean of k-distances of each observation\n","media_distancias=distances.mean(axis =1)\n","plt.plot(media_distancias)\n","media=np.mean(media_distancias)\n","desvio_distancias= np.std(media_distancias)\n","desvio_distancias_array=np.arange(0,len(media_distancias)-1)\n","desvio_distancias_array2=deepcopy(desvio_distancias_array)\n","desvio_distancias_array.fill(desvio_distancias)\n","desvio_distancias_array2.fill(desvio_distancias*2)\n","plt.plot(media+desvio_distancias_array)\n","plt.plot(media+desvio_distancias_array2)\n","print('desvio_distancias',desvio_distancias,media,desvio_distancias,desvio_distancias*2,media+desvio_distancias*2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"y_XAyT6bu4e9","executionInfo":{"status":"ok","timestamp":1729796611326,"user_tz":180,"elapsed":782,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"ecffd5f9-03b0-4731-fa26-cbb951df8e8c"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["desvio_distancias 77.93548170761302 31.723952923125285 77.93548170761302 155.87096341522604 187.59491633835134\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# visually determine cutoff values > 0.15\n","outlier_index = np.where(distances.mean(axis = 1) > 500)\n","outlier_index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Njr9K975u_Tm","executionInfo":{"status":"ok","timestamp":1729796612887,"user_tz":180,"elapsed":32,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"cb9d0bd4-a413-4053-92cc-c8f3b6fa8d46"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([1051, 1052, 1158]),)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# filter outlier values\n","outlier_values = dataset.iloc[outlier_index]\n","outlier_values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"AeTv2n2hvApZ","executionInfo":{"status":"ok","timestamp":1729796613456,"user_tz":180,"elapsed":19,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"2a51cadb-20cd-4245-8a90-4410ef52daf6"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","1051                      2281.0            238.0     260.0   \n","1052                       899.0             93.0     122.0   \n","1158                       849.0            616.0     626.0   \n","\n","      Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","1051                        1.173077     305.0     2194.0          87.0   \n","1052                        1.106557     135.0      876.0          23.0   \n","1158                        1.043131     653.0      825.0          24.0   \n","\n","      desktop  mobile  tablet  ...  Chrome OS  BlackBerry  \\\n","1051    686.0  1595.0     0.0  ...        0.0         0.0   \n","1052    234.0   657.0     8.0  ...        0.0         0.0   \n","1158    271.0   564.0    14.0  ...        0.0         0.0   \n","\n","      Sistema operativo promedio  Sistema operativo std  Direct  \\\n","1051                  228.100006             460.089874   195.0   \n","1052                   89.900002             195.217545    53.0   \n","1158                   84.900002             165.244934    67.0   \n","\n","      Organic Search  Referral  Social  \\\n","1051          1541.0       5.0   540.0   \n","1052           443.0       3.0   400.0   \n","1158           760.0      10.0    12.0   \n","\n","      Agrupación de canales predeterminada promedio  \\\n","1051                                         570.25   \n","1052                                         224.75   \n","1158                                         212.25   \n","\n","      Agrupación de canales predeterminada std  \n","1051                                592.366150  \n","1052                                198.126694  \n","1158                                317.069702  \n","\n","[3 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-187b9960-8812-4121-b7bc-32e615abb91f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Número de vistas de página</th>\n","      <th>Usuarios nuevos</th>\n","      <th>Usuarios</th>\n","      <th>Número de sesiones por usuario</th>\n","      <th>Sesiones</th>\n","      <th>Argentina</th>\n","      <th>Otros Paises</th>\n","      <th>desktop</th>\n","      <th>mobile</th>\n","      <th>tablet</th>\n","      <th>...</th>\n","      <th>Chrome OS</th>\n","      <th>BlackBerry</th>\n","      <th>Sistema operativo promedio</th>\n","      <th>Sistema operativo std</th>\n","      <th>Direct</th>\n","      <th>Organic Search</th>\n","      <th>Referral</th>\n","      <th>Social</th>\n","      <th>Agrupación de canales predeterminada promedio</th>\n","      <th>Agrupación de canales predeterminada std</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1051</th>\n","      <td>2281.0</td>\n","      <td>238.0</td>\n","      <td>260.0</td>\n","      <td>1.173077</td>\n","      <td>305.0</td>\n","      <td>2194.0</td>\n","      <td>87.0</td>\n","      <td>686.0</td>\n","      <td>1595.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>228.100006</td>\n","      <td>460.089874</td>\n","      <td>195.0</td>\n","      <td>1541.0</td>\n","      <td>5.0</td>\n","      <td>540.0</td>\n","      <td>570.25</td>\n","      <td>592.366150</td>\n","    </tr>\n","    <tr>\n","      <th>1052</th>\n","      <td>899.0</td>\n","      <td>93.0</td>\n","      <td>122.0</td>\n","      <td>1.106557</td>\n","      <td>135.0</td>\n","      <td>876.0</td>\n","      <td>23.0</td>\n","      <td>234.0</td>\n","      <td>657.0</td>\n","      <td>8.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>89.900002</td>\n","      <td>195.217545</td>\n","      <td>53.0</td>\n","      <td>443.0</td>\n","      <td>3.0</td>\n","      <td>400.0</td>\n","      <td>224.75</td>\n","      <td>198.126694</td>\n","    </tr>\n","    <tr>\n","      <th>1158</th>\n","      <td>849.0</td>\n","      <td>616.0</td>\n","      <td>626.0</td>\n","      <td>1.043131</td>\n","      <td>653.0</td>\n","      <td>825.0</td>\n","      <td>24.0</td>\n","      <td>271.0</td>\n","      <td>564.0</td>\n","      <td>14.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>84.900002</td>\n","      <td>165.244934</td>\n","      <td>67.0</td>\n","      <td>760.0</td>\n","      <td>10.0</td>\n","      <td>12.0</td>\n","      <td>212.25</td>\n","      <td>317.069702</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-187b9960-8812-4121-b7bc-32e615abb91f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-187b9960-8812-4121-b7bc-32e615abb91f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-187b9960-8812-4121-b7bc-32e615abb91f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e80eaa4f-4dd3-4ae3-9113-268d60632eaf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e80eaa4f-4dd3-4ae3-9113-268d60632eaf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e80eaa4f-4dd3-4ae3-9113-268d60632eaf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_29245abf-f2a6-4da9-80ae-31f6cf2df68d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('outlier_values')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_29245abf-f2a6-4da9-80ae-31f6cf2df68d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('outlier_values');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"outlier_values"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["plt.scatter(dataset['Número de vistas de página'],dataset['Sesiones'])\n","plt.scatter(outlier_values['Número de vistas de página'], outlier_values['Sesiones'], color = \"r\")\n","print(X[:,0],'\\n otro \\n ',X[:,1])\n","#Número de vistas de página X Usuarios nuevos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":485},"id":"lopz_66pwCGJ","executionInfo":{"status":"ok","timestamp":1729796619583,"user_tz":180,"elapsed":456,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"2e4f757a-68a0-4d35-d2a9-fd0e9051b40f"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["[541. 226. 136. ...  88. 103. 148.] \n"," otro \n","  [22. 23. 18. ... 40. 44. 61.]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.scatter(dataset['Número de vistas de página'],dataset['Usuarios nuevos'])\n","plt.scatter(outlier_values['Número de vistas de página'], outlier_values['Usuarios nuevos'], color = \"r\")"],"metadata":{"id":"dZX7fFVTn1vz","colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"status":"ok","timestamp":1729796657155,"user_tz":180,"elapsed":1537,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"d920aa0c-fd3b-4adf-badf-44a29b925b1e"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7ea97f6c1e70>"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","#agregar columna fecha Nuevamente\n","dataset['Fecha']=fechaColumna\n","outlier_index[0]"],"metadata":{"id":"xvFwGdCm4Wpx","executionInfo":{"status":"ok","timestamp":1729796705970,"user_tz":180,"elapsed":489,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d8e8a28b-713b-41db-dfe9-ab293ffc15d3"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1051, 1052, 1158])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["dataset = dataset.drop(outlier_index[0])\n","dataset = dataset.drop('BlackBerry', axis=1)\n","\n","print(dataset.values.shape)\n","#print(update_df.values.shape)\n","#dataset=update_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UfOuPtBozlVK","executionInfo":{"status":"ok","timestamp":1729796707111,"user_tz":180,"elapsed":644,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"5db12d7e-d607-4ec5-c144-9d613daf2f35"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["(1812, 29)\n"]}]},{"cell_type":"code","source":["# Definimos las ventanas basadas en la secuencia de Fibonacci (6, 12, 18, 30, 48...)\n","from sklearn.impute import SimpleImputer\n","df=deepcopy(dataset)\n","ventanas = [6, 12, 18, 30, 48, 78, 126, 203, 329]\n","columna='Número de vistas de página'\n","# Calcular la mediana móvil (rolling median) para cada ventana y agregarla como una columna nueva en el DataFrame\n","df.drop([\"Fecha\"], inplace=True, axis=1)\n","# Calcular la mediana móvil (rolling median) para cada ventana y agregarla como una columna nueva en el DataFrame\n","for ventana in ventanas:\n","    df[f'rolling_median_{ventana}'] = df[columna].rolling(window=ventana).median()\n","\n","# Reemplazar los NaNs en las columnas de medianas móviles con la media de cada columna\n","for ventana in ventanas:\n","    col = f'rolling_median_{ventana}'\n","    df[col].fillna(df[col].mean(), inplace=True)\n","\n","# Calcular la mediana de las medianas (por fila) y agregarla como una nueva columna\n","df['mediana_de_medianas'] = df[[f'rolling_median_{v}' for v in ventanas]].median(axis=1)\n","\n","# Mostrar el DataFrame resultante\n","print(df)\n","\n","dataset['mediana_de_medianas']=df['mediana_de_medianas']"],"metadata":{"id":"6J8b22BSjGuJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729796722729,"user_tz":180,"elapsed":435,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"d6bb9a2c-9bb3-4f06-a81b-163ca2557ada"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["      Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0                          541.0             22.0      22.0   \n","1                          226.0             23.0      26.0   \n","2                          136.0             18.0      24.0   \n","3                          229.0             11.0      16.0   \n","4                           60.0             10.0      13.0   \n","...                          ...              ...       ...   \n","1810                        46.0             32.0      39.0   \n","1811                        58.0             30.0      35.0   \n","1812                        88.0             40.0      48.0   \n","1813                       103.0             44.0      58.0   \n","1814                       148.0             61.0      73.0   \n","\n","      Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","0                           1.636364      36.0      540.0           1.0   \n","1                           1.346154      35.0      212.0          14.0   \n","2                           1.458333      35.0      133.0           3.0   \n","3                           1.812500      29.0      224.0           5.0   \n","4                           1.461538      19.0       56.0           4.0   \n","...                              ...       ...        ...           ...   \n","1810                        1.102564      43.0       27.0          19.0   \n","1811                        1.028571      36.0       42.0          16.0   \n","1812                        1.104167      53.0       65.0          23.0   \n","1813                        1.137931      66.0       87.0          16.0   \n","1814                        1.123288      82.0      137.0          11.0   \n","\n","      desktop  mobile  tablet  ...  rolling_median_6  rolling_median_12  \\\n","0       492.0    49.0     0.0  ...         98.153846          95.799278   \n","1       211.0     8.0     7.0  ...         98.153846          95.799278   \n","2       119.0    17.0     0.0  ...         98.153846          95.799278   \n","3       215.0    14.0     0.0  ...         98.153846          95.799278   \n","4        40.0    20.0     0.0  ...         98.153846          95.799278   \n","...       ...     ...     ...  ...               ...                ...   \n","1810     25.0    21.0     0.0  ...        162.000000         152.500000   \n","1811     36.0    22.0     0.0  ...        152.500000         152.500000   \n","1812     48.0    40.0     0.0  ...        115.500000         139.000000   \n","1813     74.0    29.0     0.0  ...         95.500000         123.000000   \n","1814    111.0    36.0     1.0  ...         95.500000         123.000000   \n","\n","      rolling_median_18  rolling_median_30  rolling_median_48  \\\n","0             94.291365          92.147224          89.697167   \n","1             94.291365          92.147224          89.697167   \n","2             94.291365          92.147224          89.697167   \n","3             94.291365          92.147224          89.697167   \n","4             94.291365          92.147224          89.697167   \n","...                 ...                ...                ...   \n","1810         137.500000         141.500000         132.000000   \n","1811         129.500000         137.500000         132.000000   \n","1812         120.500000         133.500000         132.000000   \n","1813         120.500000         133.500000         132.000000   \n","1814         129.500000         133.500000         133.500000   \n","\n","      rolling_median_78  rolling_median_126  rolling_median_203  \\\n","0             87.438329            86.94102           86.508696   \n","1             87.438329            86.94102           86.508696   \n","2             87.438329            86.94102           86.508696   \n","3             87.438329            86.94102           86.508696   \n","4             87.438329            86.94102           86.508696   \n","...                 ...                 ...                 ...   \n","1810         127.000000           121.50000          132.000000   \n","1811         127.000000           121.50000          132.000000   \n","1812         127.000000           121.00000          132.000000   \n","1813         124.500000           120.50000          132.000000   \n","1814         127.000000           120.50000          132.000000   \n","\n","      rolling_median_329  mediana_de_medianas  \n","0              86.365903            89.697167  \n","1              86.365903            89.697167  \n","2              86.365903            89.697167  \n","3              86.365903            89.697167  \n","4              86.365903            89.697167  \n","...                  ...                  ...  \n","1810          110.000000           132.000000  \n","1811          110.000000           132.000000  \n","1812          110.000000           127.000000  \n","1813          110.000000           123.000000  \n","1814          111.000000           127.000000  \n","\n","[1812 rows x 38 columns]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-25-8847db652abb>:15: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[col].fillna(df[col].mean(), inplace=True)\n"]}]},{"cell_type":"code","source":["#agregar lagged datapints\n","#df=deepcopy(dataset)\n","columna='Número de vistas de página'\n","lags=[int(3*30), int(30*6), int(30*9), int(30*12)]\n","for lag in lags:\n","    dataset[f'lag_{lag}'] = dataset[columna].shift(lag)\n","#dataset=dataset[[f'lag_{lag}' for lag in lags]]\n","# Reemplazar los NaNs en las columnas de medianas móviles con la media de cada columna\n","for lag in lags:\n","    col = f'lag_{lag}'\n","    dataset[col].fillna(dataset[col].mean(), inplace=True)\n","    '''The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","    For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","    '''\n","ver=dataset[[f'lag_{lag}' for lag in lags]]\n","ver"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"4bOo95xqAxiO","executionInfo":{"status":"ok","timestamp":1729796753044,"user_tz":180,"elapsed":446,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"56be2a4b-e256-43a9-bfa2-b18d87a5a506"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-26-261476a2b0dd>:11: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  dataset[col].fillna(dataset[col].mean(), inplace=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["          lag_90     lag_180    lag_270     lag_360\n","0     104.515099  100.866425  99.524643  100.170799\n","1     104.515099  100.866425  99.524643  100.170799\n","2     104.515099  100.866425  99.524643  100.170799\n","3     104.515099  100.866425  99.524643  100.170799\n","4     104.515099  100.866425  99.524643  100.170799\n","...          ...         ...        ...         ...\n","1810   46.000000  225.000000  84.000000  251.000000\n","1811  126.000000  214.000000  18.000000  176.000000\n","1812  171.000000  283.000000  38.000000   91.000000\n","1813  104.000000   89.000000  37.000000   54.000000\n","1814  111.000000   52.000000  43.000000   31.000000\n","\n","[1812 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-6f94e02f-68c3-46fb-b0a6-b5660b2c1b30\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lag_90</th>\n","      <th>lag_180</th>\n","      <th>lag_270</th>\n","      <th>lag_360</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>104.515099</td>\n","      <td>100.866425</td>\n","      <td>99.524643</td>\n","      <td>100.170799</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>104.515099</td>\n","      <td>100.866425</td>\n","      <td>99.524643</td>\n","      <td>100.170799</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>104.515099</td>\n","      <td>100.866425</td>\n","      <td>99.524643</td>\n","      <td>100.170799</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>104.515099</td>\n","      <td>100.866425</td>\n","      <td>99.524643</td>\n","      <td>100.170799</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>104.515099</td>\n","      <td>100.866425</td>\n","      <td>99.524643</td>\n","      <td>100.170799</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1810</th>\n","      <td>46.000000</td>\n","      <td>225.000000</td>\n","      <td>84.000000</td>\n","      <td>251.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1811</th>\n","      <td>126.000000</td>\n","      <td>214.000000</td>\n","      <td>18.000000</td>\n","      <td>176.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1812</th>\n","      <td>171.000000</td>\n","      <td>283.000000</td>\n","      <td>38.000000</td>\n","      <td>91.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1813</th>\n","      <td>104.000000</td>\n","      <td>89.000000</td>\n","      <td>37.000000</td>\n","      <td>54.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1814</th>\n","      <td>111.000000</td>\n","      <td>52.000000</td>\n","      <td>43.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1812 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f94e02f-68c3-46fb-b0a6-b5660b2c1b30')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f94e02f-68c3-46fb-b0a6-b5660b2c1b30 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f94e02f-68c3-46fb-b0a6-b5660b2c1b30');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6c86d1c1-9349-4935-9e03-cc53acdfb1e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c86d1c1-9349-4935-9e03-cc53acdfb1e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6c86d1c1-9349-4935-9e03-cc53acdfb1e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f8198799-17ea-4a09-8fba-d97d50f52cfe\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ver')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f8198799-17ea-4a09-8fba-d97d50f52cfe button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ver');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ver","summary":"{\n  \"name\": \"ver\",\n  \"rows\": 1812,\n  \"fields\": [\n    {\n      \"column\": \"lag_90\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 312,\n        \"samples\": [\n          99.0,\n          196.0,\n          38.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lag_180\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 299,\n        \"samples\": [\n          213.0,\n          225.0,\n          96.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lag_270\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          196.0,\n          149.0,\n          116.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lag_360\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 284,\n        \"samples\": [\n          196.0,\n          203.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["print('algun nan\\n',dataset.isnull().any(),'\\n')\n","#print('algun nan',dataset.isnull().values.any(),'\\n')\n","#nan_index = np.where(dataset.isnull().values.any())\n","\n","#nan_index2 = np.where(dataset['Predictor Flag'].isnull())\n","#nan_row=dataset.iloc[nan_index2]\n","#nan_row\n","\n","nan_index = np.where(np.atleast_1d(dataset.isnull().values.any()))\n","\n","#np.where() devuelve una tupla de arrays, por lo que puedes acceder al primer elemento\n","# que contendrá los índices de los valores nan, si los hay\n","dataset=dataset.dropna()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0kss6QwG6dqB","executionInfo":{"status":"ok","timestamp":1729796761069,"user_tz":180,"elapsed":411,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"f1400377-08ca-44b3-b3ff-8133cf7c46af"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["algun nan\n"," Número de vistas de página                       False\n","Usuarios nuevos                                  False\n","Usuarios                                         False\n","Número de sesiones por usuario                   False\n","Sesiones                                         False\n","Argentina                                        False\n","Otros Paises                                     False\n","desktop                                          False\n","mobile                                           False\n","tablet                                           False\n","Categoría de dispositivo promedio                False\n","Categoría de dispositivo std                     False\n","Linux                                            False\n","Android                                          False\n","iOS                                              False\n","Windows                                          False\n","Macintosh                                        False\n","Windows Phone                                    False\n","Sistema operativo (not set)                      False\n","Chrome OS                                        False\n","Sistema operativo promedio                       False\n","Sistema operativo std                            False\n","Direct                                           False\n","Organic Search                                   False\n","Referral                                         False\n","Social                                           False\n","Agrupación de canales predeterminada promedio    False\n","Agrupación de canales predeterminada std         False\n","Fecha                                            False\n","mediana_de_medianas                              False\n","lag_90                                           False\n","lag_180                                          False\n","lag_270                                          False\n","lag_360                                          False\n","dtype: bool \n","\n"]}]},{"cell_type":"code","source":["dataset.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xdPx3I5H6_eV","executionInfo":{"status":"ok","timestamp":1729796775475,"user_tz":180,"elapsed":394,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"b482905a-1a89-49e2-83e5-cc1e078a34b5"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'desktop', 'mobile', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Linux', 'Android', 'iOS', 'Windows', 'Macintosh', 'Windows Phone',\n","       'Sistema operativo (not set)', 'Chrome OS',\n","       'Sistema operativo promedio', 'Sistema operativo std', 'Direct',\n","       'Organic Search', 'Referral', 'Social',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'Fecha',\n","       'mediana_de_medianas', 'lag_90', 'lag_180', 'lag_270', 'lag_360'],\n","      dtype='object')"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["# agregar medianas\n","dataset['Tizen'] = 0\n","dataset['mediana Dispositivos'] = dataset[['mobile', 'desktop', 'tablet']].median(axis=1)\n","dataset['mediana Sistema operativo'] = dataset[['Windows', 'Android', 'Linux',\n","       'Macintosh', 'Sistema operativo (not set)', 'iOS', 'Windows Phone',\n","       'Chrome OS', 'Tizen']].median(axis=1)\n","dataset['mediana Agrupación de canales predeterminada'] = dataset[['Organic Search', 'Social', 'Direct',\n","       'Referral']].median(axis=1)"],"metadata":{"id":"M2w8Q_k4BHbQ","executionInfo":{"status":"ok","timestamp":1729798487274,"user_tz":180,"elapsed":378,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["dataset.drop([\"Fecha\"], inplace=True, axis=1)\n","\n","print(dataset.columns)\n","print(dataset.shape)\n","dfPrueba=deepcopy(dataset)\n","dfPrueba=dfPrueba.loc[:, ('Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Windows', 'Android', 'Linux', 'Macintosh',\n","       'Sistema operativo (not set)', 'iOS', 'Windows Phone', 'Chrome OS',\n","       'Tizen', 'Sistema operativo promedio', 'Sistema operativo std',\n","       'Organic Search', 'Social', 'Direct', 'Referral',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'mediana Dispositivos',\n","       'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada') ]\n","dataset=dfPrueba\n","dataset.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o5VvAgdgAFZ2","executionInfo":{"status":"ok","timestamp":1729798542672,"user_tz":180,"elapsed":434,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"3c38e23b-bf4e-40cd-cc9d-5bfd94efef7e"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'desktop', 'mobile', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Linux', 'Android', 'iOS', 'Windows', 'Macintosh', 'Windows Phone',\n","       'Sistema operativo (not set)', 'Chrome OS',\n","       'Sistema operativo promedio', 'Sistema operativo std', 'Direct',\n","       'Organic Search', 'Referral', 'Social',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'mediana Dispositivos',\n","       'Tizen', 'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada'],\n","      dtype='object')\n","(1812, 37)\n"]},{"output_type":"execute_result","data":{"text/plain":["Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Windows', 'Android', 'Linux', 'Macintosh',\n","       'Sistema operativo (not set)', 'iOS', 'Windows Phone', 'Chrome OS',\n","       'Tizen', 'Sistema operativo promedio', 'Sistema operativo std',\n","       'Organic Search', 'Social', 'Direct', 'Referral',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'mediana Dispositivos',\n","       'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada'],\n","      dtype='object')"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["\n","print(dataset)\n","salidaCarpeta=\"/content/drive/MyDrive/a Tesis de Grado/Tesis Versiones/tesis 2024/UA/editorial universitaria/preprocesamiento/outlier/salidaCSV\"\n","NombreArchivoCSV=\"/salidaKNN2024EditorialUniversitariaOctubre.csv\"\n","dataset.to_csv(salidaCarpeta + NombreArchivoCSV)\n","print(dataset.columns)\n","print(len(dataset.columns))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQU30rGD4P13","executionInfo":{"status":"ok","timestamp":1729798715036,"user_tz":180,"elapsed":420,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"d09f5d06-4e21-470a-bf3e-5fa023072f50"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["      Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0                          541.0             22.0      22.0   \n","1                          226.0             23.0      26.0   \n","2                          136.0             18.0      24.0   \n","3                          229.0             11.0      16.0   \n","4                           60.0             10.0      13.0   \n","...                          ...              ...       ...   \n","1810                        46.0             32.0      39.0   \n","1811                        58.0             30.0      35.0   \n","1812                        88.0             40.0      48.0   \n","1813                       103.0             44.0      58.0   \n","1814                       148.0             61.0      73.0   \n","\n","      Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","0                           1.636364      36.0      540.0           1.0   \n","1                           1.346154      35.0      212.0          14.0   \n","2                           1.458333      35.0      133.0           3.0   \n","3                           1.812500      29.0      224.0           5.0   \n","4                           1.461538      19.0       56.0           4.0   \n","...                              ...       ...        ...           ...   \n","1810                        1.102564      43.0       27.0          19.0   \n","1811                        1.028571      36.0       42.0          16.0   \n","1812                        1.104167      53.0       65.0          23.0   \n","1813                        1.137931      66.0       87.0          16.0   \n","1814                        1.123288      82.0      137.0          11.0   \n","\n","      mobile  desktop  tablet  ...  \\\n","0       49.0    492.0     0.0  ...   \n","1        8.0    211.0     7.0  ...   \n","2       17.0    119.0     0.0  ...   \n","3       14.0    215.0     0.0  ...   \n","4       20.0     40.0     0.0  ...   \n","...      ...      ...     ...  ...   \n","1810    21.0     25.0     0.0  ...   \n","1811    22.0     36.0     0.0  ...   \n","1812    40.0     48.0     0.0  ...   \n","1813    29.0     74.0     0.0  ...   \n","1814    36.0    111.0     1.0  ...   \n","\n","      Agrupación de canales predeterminada promedio  \\\n","0                                            135.25   \n","1                                             56.50   \n","2                                             34.00   \n","3                                             57.25   \n","4                                             15.00   \n","...                                             ...   \n","1810                                          11.50   \n","1811                                          14.50   \n","1812                                          22.00   \n","1813                                          25.75   \n","1814                                          37.00   \n","\n","      Agrupación de canales predeterminada std  mediana_de_medianas  \\\n","0                                   202.460342            89.697167   \n","1                                    84.049095            89.697167   \n","2                                    39.344631            89.697167   \n","3                                    94.035568            89.697167   \n","4                                     9.433981            89.697167   \n","...                                        ...                  ...   \n","1810                                  9.912114           132.000000   \n","1811                                 17.471405           132.000000   \n","1812                                 19.836834           127.000000   \n","1813                                 26.938587           123.000000   \n","1814                                 35.881752           127.000000   \n","\n","          lag_90     lag_180    lag_270     lag_360  mediana Dispositivos  \\\n","0     104.515099  100.866425  99.524643  100.170799                  49.0   \n","1     104.515099  100.866425  99.524643  100.170799                   8.0   \n","2     104.515099  100.866425  99.524643  100.170799                  17.0   \n","3     104.515099  100.866425  99.524643  100.170799                  14.0   \n","4     104.515099  100.866425  99.524643  100.170799                  20.0   \n","...          ...         ...        ...         ...                   ...   \n","1810   46.000000  225.000000  84.000000  251.000000                  21.0   \n","1811  126.000000  214.000000  18.000000  176.000000                  22.0   \n","1812  171.000000  283.000000  38.000000   91.000000                  40.0   \n","1813  104.000000   89.000000  37.000000   54.000000                  29.0   \n","1814  111.000000   52.000000  43.000000   31.000000                  36.0   \n","\n","      mediana Sistema operativo  mediana Agrupación de canales predeterminada  \n","0                           1.0                                          28.0  \n","1                           0.0                                          12.5  \n","2                           0.0                                          20.0  \n","3                           0.0                                           4.5  \n","4                           0.0                                          18.0  \n","...                         ...                                           ...  \n","1810                        2.0                                           9.5  \n","1811                        0.0                                           6.5  \n","1812                        1.0                                          18.5  \n","1813                        0.0                                          16.0  \n","1814                        1.0                                          22.0  \n","\n","[1812 rows x 37 columns]\n","Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Windows', 'Android', 'Linux', 'Macintosh',\n","       'Sistema operativo (not set)', 'iOS', 'Windows Phone', 'Chrome OS',\n","       'Tizen', 'Sistema operativo promedio', 'Sistema operativo std',\n","       'Organic Search', 'Social', 'Direct', 'Referral',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'mediana Dispositivos',\n","       'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada'],\n","      dtype='object')\n","37\n"]}]},{"cell_type":"code","source":["#You can see the disk information using a command like !df -h.\n","#To see CPU specs, !cat /proc/cpuinfo.\n","#For memory, !cat /proc/meminfo.\n","!df -h"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"onASpT3BveCx","executionInfo":{"status":"ok","timestamp":1729798721428,"user_tz":180,"elapsed":459,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"7108391f-ba12-4a7b-ba29-1f641e8b3a84"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Filesystem      Size  Used Avail Use% Mounted on\n","overlay         226G   33G  194G  15% /\n","tmpfs            64M     0   64M   0% /dev\n","shm             5.8G     0  5.8G   0% /dev/shm\n","/dev/root       2.0G  1.2G  820M  59% /usr/sbin/docker-init\n","tmpfs           6.4G  828K  6.4G   1% /var/colab\n","/dev/sda1       233G   57G  176G  25% /etc/hosts\n","tmpfs           6.4G     0  6.4G   0% /proc/acpi\n","tmpfs           6.4G     0  6.4G   0% /proc/scsi\n","tmpfs           6.4G     0  6.4G   0% /sys/firmware\n","drive           100G   57G   44G  57% /content/drive\n"]}]},{"cell_type":"code","source":["!cat /proc/cpuinfo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GBED-xbTvezx","executionInfo":{"status":"ok","timestamp":1729798722031,"user_tz":180,"elapsed":24,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"425d6df8-82db-4510-cb6a-3aeeb706864b"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["processor\t: 0\n","vendor_id\t: GenuineIntel\n","cpu family\t: 6\n","model\t\t: 79\n","model name\t: Intel(R) Xeon(R) CPU @ 2.20GHz\n","stepping\t: 0\n","microcode\t: 0xffffffff\n","cpu MHz\t\t: 2199.998\n","cache size\t: 56320 KB\n","physical id\t: 0\n","siblings\t: 2\n","core id\t\t: 0\n","cpu cores\t: 1\n","apicid\t\t: 0\n","initial apicid\t: 0\n","fpu\t\t: yes\n","fpu_exception\t: yes\n","cpuid level\t: 13\n","wp\t\t: yes\n","flags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx smap xsaveopt arat md_clear arch_capabilities\n","bugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa mmio_stale_data retbleed bhi\n","bogomips\t: 4399.99\n","clflush size\t: 64\n","cache_alignment\t: 64\n","address sizes\t: 46 bits physical, 48 bits virtual\n","power management:\n","\n","processor\t: 1\n","vendor_id\t: GenuineIntel\n","cpu family\t: 6\n","model\t\t: 79\n","model name\t: Intel(R) Xeon(R) CPU @ 2.20GHz\n","stepping\t: 0\n","microcode\t: 0xffffffff\n","cpu MHz\t\t: 2199.998\n","cache size\t: 56320 KB\n","physical id\t: 0\n","siblings\t: 2\n","core id\t\t: 0\n","cpu cores\t: 1\n","apicid\t\t: 1\n","initial apicid\t: 1\n","fpu\t\t: yes\n","fpu_exception\t: yes\n","cpuid level\t: 13\n","wp\t\t: yes\n","flags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx smap xsaveopt arat md_clear arch_capabilities\n","bugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa mmio_stale_data retbleed bhi\n","bogomips\t: 4399.99\n","clflush size\t: 64\n","cache_alignment\t: 64\n","address sizes\t: 46 bits physical, 48 bits virtual\n","power management:\n","\n"]}]},{"cell_type":"code","source":["!cat /proc/meminfo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cnsMDJbXviOi","executionInfo":{"status":"ok","timestamp":1729798722032,"user_tz":180,"elapsed":16,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"94f120fa-247c-439c-f41c-ce470975441c"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["MemTotal:       13290452 kB\n","MemFree:         6261900 kB\n","MemAvailable:   11267816 kB\n","Buffers:          465440 kB\n","Cached:          4679860 kB\n","SwapCached:            0 kB\n","Active:           858492 kB\n","Inactive:        5829716 kB\n","Active(anon):       1612 kB\n","Inactive(anon):  1543700 kB\n","Active(file):     856880 kB\n","Inactive(file):  4286016 kB\n","Unevictable:          20 kB\n","Mlocked:              20 kB\n","SwapTotal:             0 kB\n","SwapFree:              0 kB\n","Dirty:              2036 kB\n","Writeback:             0 kB\n","AnonPages:       1542968 kB\n","Mapped:           737204 kB\n","Shmem:              2392 kB\n","KReclaimable:     188588 kB\n","Slab:             234684 kB\n","SReclaimable:     188588 kB\n","SUnreclaim:        46096 kB\n","KernelStack:        7264 kB\n","PageTables:        30308 kB\n","SecPageTables:         0 kB\n","NFS_Unstable:          0 kB\n","Bounce:                0 kB\n","WritebackTmp:          0 kB\n","CommitLimit:     6645224 kB\n","Committed_AS:    4091468 kB\n","VmallocTotal:   34359738367 kB\n","VmallocUsed:       13608 kB\n","VmallocChunk:          0 kB\n","Percpu:             1120 kB\n","HardwareCorrupted:     0 kB\n","AnonHugePages:         0 kB\n","ShmemHugePages:        0 kB\n","ShmemPmdMapped:        0 kB\n","FileHugePages:         0 kB\n","FilePmdMapped:         0 kB\n","CmaTotal:              0 kB\n","CmaFree:               0 kB\n","Unaccepted:            0 kB\n","HugePages_Total:       0\n","HugePages_Free:        0\n","HugePages_Rsvd:        0\n","HugePages_Surp:        0\n","Hugepagesize:       2048 kB\n","Hugetlb:               0 kB\n","DirectMap4k:       66360 kB\n","DirectMap2M:     5173248 kB\n","DirectMap1G:    10485760 kB\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"2nVF3ps4CcxN","executionInfo":{"status":"ok","timestamp":1729798723566,"user_tz":180,"elapsed":9,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}}},"execution_count":38,"outputs":[]}],"metadata":{"colab":{"provenance":[],"mount_file_id":"1hY27r8KHPAk4ZWqf0755rJADf2HXVSKo","authorship_tag":"ABX9TyNgsG0xHTF3pqFp7cVXVpI8"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}