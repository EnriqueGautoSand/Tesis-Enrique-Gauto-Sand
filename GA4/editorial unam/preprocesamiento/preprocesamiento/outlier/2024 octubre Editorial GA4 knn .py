{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"x6Xuz8cqauYb","executionInfo":{"status":"ok","timestamp":1730211499433,"user_tz":180,"elapsed":14587,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}}},"outputs":[],"source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras #desde tensorflow 2 se importa keras,  como paquete integrado de tensorflow\n","import pandas as pd\n","import numpy as np\n","from math import sqrt\n","from numpy import concatenate\n","from matplotlib import pyplot\n","from pandas import read_csv\n","from pandas import DataFrame\n","from pandas import concat\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import mean_squared_error\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.layers import LSTM, GRU\n","import tensorflow as tf\n","from datetime import datetime\n","from keras.models import Sequential\n","from keras.layers import Dense,Flatten,LSTM,RepeatVector,TimeDistributed\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R_2i5Fw0awOr","executionInfo":{"status":"ok","timestamp":1730211569146,"user_tz":180,"elapsed":69725,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"90c13968-5c2a-4f55-8166-299e8074b00b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["\n","from google.colab import drive\n","\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":958,"status":"ok","timestamp":1730212459685,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"},"user_tz":180},"id":"kpkiNaL_boap","outputId":"f3178955-f15c-4ca7-95cc-42464355a026"},"outputs":[{"output_type":"stream","name":"stdout","text":["16380\n","Index(['Fecha', 'Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Android', 'Windows', 'Macintosh', 'iOS', 'Linux', 'Chrome OS',\n","       'Sistema operativo (not set)', 'Sistema operativo promedio',\n","       'Sistema operativo std', 'Organic Search', 'Direct', 'Referral',\n","       'Social', 'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std'],\n","      dtype='object')\n","0      14 jun 2022\n","1      15 jun 2022\n","2      16 jun 2022\n","3      17 jun 2022\n","4      18 jun 2022\n","          ...     \n","580    20 ene 2024\n","581    21 ene 2024\n","582    22 ene 2024\n","583    23 ene 2024\n","584    24 ene 2024\n","Name: Fecha, Length: 585, dtype: object\n","datetime64[ns]\n","(585, 28)\n","         Fecha  Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0   2022-06-14                        71.0             39.0      39.0   \n","1   2022-06-15                       279.0            142.0     147.0   \n","2   2022-06-16                       207.0            103.0     117.0   \n","3   2022-06-17                       110.0             77.0      81.0   \n","4   2022-06-18                        80.0             53.0      57.0   \n","..         ...                         ...              ...       ...   \n","580 2024-01-20                        19.0              8.0       9.0   \n","581 2024-01-21                        48.0             13.0      18.0   \n","582 2024-01-22                       140.0             18.0      23.0   \n","583 2024-01-23                        55.0             27.0      30.0   \n","584 2024-01-24                        53.0             19.0      24.0   \n","\n","     Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","0                          1.205128      47.0       70.0           1.0   \n","1                          1.156463     170.0      222.0          57.0   \n","2                          1.230769     144.0      174.0          33.0   \n","3                          1.074074      87.0       86.0          24.0   \n","4                          1.052632      60.0       60.0          20.0   \n","..                              ...       ...        ...           ...   \n","580                        1.125000       9.0       15.0           4.0   \n","581                        1.375000      22.0       44.0           4.0   \n","582                        1.318182      29.0       31.0         109.0   \n","583                        1.066667      32.0       36.0          19.0   \n","584                        1.190476      25.0       46.0           7.0   \n","\n","     mobile  desktop  ...  Chrome OS  Sistema operativo (not set)  \\\n","0      37.0     34.0  ...        0.0                          0.0   \n","1     155.0    124.0  ...        0.0                          0.0   \n","2     124.0     81.0  ...        0.0                          0.0   \n","3      72.0     37.0  ...        0.0                          0.0   \n","4      48.0     30.0  ...        0.0                          0.0   \n","..      ...      ...  ...        ...                          ...   \n","580    17.0      2.0  ...        0.0                          0.0   \n","581    12.0     36.0  ...        0.0                          0.0   \n","582    14.0    126.0  ...        0.0                          0.0   \n","583    12.0     41.0  ...        0.0                          0.0   \n","584    10.0     43.0  ...        0.0                          0.0   \n","\n","     Sistema operativo promedio  Sistema operativo std  Organic Search  \\\n","0                      7.888889              14.058959            45.0   \n","1                     31.000000              47.053162            81.0   \n","2                     23.000000              37.082489            67.0   \n","3                     12.222222              21.420540            24.0   \n","4                      8.888889              16.589451            15.0   \n","..                          ...                    ...             ...   \n","580                    2.111111               4.954111             8.0   \n","581                    5.333333              11.274356            25.0   \n","582                   15.555555              39.223324           116.0   \n","583                    6.111111              13.084720            40.0   \n","584                    5.888889              12.296742            22.0   \n","\n","     Direct  Referral  Social  Agrupación de canales predeterminada promedio  \\\n","0      20.0       4.0     2.0                                          17.75   \n","1     151.0       5.0    42.0                                          69.75   \n","2     114.0       8.0    18.0                                          51.75   \n","3      31.0      39.0    16.0                                          27.50   \n","4      17.0      14.0    34.0                                          20.00   \n","..      ...       ...     ...                                            ...   \n","580    11.0       0.0     0.0                                           4.75   \n","581    22.0       0.0     1.0                                          12.00   \n","582    22.0       1.0     1.0                                          35.00   \n","583    14.0       0.0     1.0                                          13.75   \n","584    28.0       0.0     3.0                                          13.25   \n","\n","     Agrupación de canales predeterminada std  \n","0                                   17.210098  \n","1                                   54.061886  \n","2                                   42.310608  \n","3                                    8.500000  \n","4                                    8.154754  \n","..                                        ...  \n","580                                  4.866981  \n","581                                 11.554220  \n","582                                 47.544716  \n","583                                 16.130329  \n","584                                 11.986972  \n","\n","[585 rows x 28 columns]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-23-82ed6c07fab6>:34: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n","  dataset[\"Fecha\"]=pd.to_datetime(dataset[\"Fecha\"].replace(mapping_dict, regex=True))#esto porque las fechas como agosto estan ago en español\n"]},{"output_type":"execute_result","data":{"text/plain":["       Fecha  Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0 2022-06-14                        71.0             39.0      39.0   \n","1 2022-06-15                       279.0            142.0     147.0   \n","2 2022-06-16                       207.0            103.0     117.0   \n","3 2022-06-17                       110.0             77.0      81.0   \n","4 2022-06-18                        80.0             53.0      57.0   \n","\n","   Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  mobile  \\\n","0                        1.205128      47.0       70.0           1.0    37.0   \n","1                        1.156463     170.0      222.0          57.0   155.0   \n","2                        1.230769     144.0      174.0          33.0   124.0   \n","3                        1.074074      87.0       86.0          24.0    72.0   \n","4                        1.052632      60.0       60.0          20.0    48.0   \n","\n","   desktop  ...  Chrome OS  Sistema operativo (not set)  \\\n","0     34.0  ...        0.0                          0.0   \n","1    124.0  ...        0.0                          0.0   \n","2     81.0  ...        0.0                          0.0   \n","3     37.0  ...        0.0                          0.0   \n","4     30.0  ...        0.0                          0.0   \n","\n","   Sistema operativo promedio  Sistema operativo std  Organic Search  Direct  \\\n","0                    7.888889              14.058959            45.0    20.0   \n","1                   31.000000              47.053162            81.0   151.0   \n","2                   23.000000              37.082489            67.0   114.0   \n","3                   12.222222              21.420540            24.0    31.0   \n","4                    8.888889              16.589451            15.0    17.0   \n","\n","   Referral  Social  Agrupación de canales predeterminada promedio  \\\n","0       4.0     2.0                                          17.75   \n","1       5.0    42.0                                          69.75   \n","2       8.0    18.0                                          51.75   \n","3      39.0    16.0                                          27.50   \n","4      14.0    34.0                                          20.00   \n","\n","   Agrupación de canales predeterminada std  \n","0                                 17.210098  \n","1                                 54.061886  \n","2                                 42.310608  \n","3                                  8.500000  \n","4                                  8.154754  \n","\n","[5 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-6b713719-d62b-47e4-84cd-bff69d2f0478\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Fecha</th>\n","      <th>Número de vistas de página</th>\n","      <th>Usuarios nuevos</th>\n","      <th>Usuarios</th>\n","      <th>Número de sesiones por usuario</th>\n","      <th>Sesiones</th>\n","      <th>Argentina</th>\n","      <th>Otros Paises</th>\n","      <th>mobile</th>\n","      <th>desktop</th>\n","      <th>...</th>\n","      <th>Chrome OS</th>\n","      <th>Sistema operativo (not set)</th>\n","      <th>Sistema operativo promedio</th>\n","      <th>Sistema operativo std</th>\n","      <th>Organic Search</th>\n","      <th>Direct</th>\n","      <th>Referral</th>\n","      <th>Social</th>\n","      <th>Agrupación de canales predeterminada promedio</th>\n","      <th>Agrupación de canales predeterminada std</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-06-14</td>\n","      <td>71.0</td>\n","      <td>39.0</td>\n","      <td>39.0</td>\n","      <td>1.205128</td>\n","      <td>47.0</td>\n","      <td>70.0</td>\n","      <td>1.0</td>\n","      <td>37.0</td>\n","      <td>34.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>7.888889</td>\n","      <td>14.058959</td>\n","      <td>45.0</td>\n","      <td>20.0</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>17.75</td>\n","      <td>17.210098</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-06-15</td>\n","      <td>279.0</td>\n","      <td>142.0</td>\n","      <td>147.0</td>\n","      <td>1.156463</td>\n","      <td>170.0</td>\n","      <td>222.0</td>\n","      <td>57.0</td>\n","      <td>155.0</td>\n","      <td>124.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>31.000000</td>\n","      <td>47.053162</td>\n","      <td>81.0</td>\n","      <td>151.0</td>\n","      <td>5.0</td>\n","      <td>42.0</td>\n","      <td>69.75</td>\n","      <td>54.061886</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-06-16</td>\n","      <td>207.0</td>\n","      <td>103.0</td>\n","      <td>117.0</td>\n","      <td>1.230769</td>\n","      <td>144.0</td>\n","      <td>174.0</td>\n","      <td>33.0</td>\n","      <td>124.0</td>\n","      <td>81.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>23.000000</td>\n","      <td>37.082489</td>\n","      <td>67.0</td>\n","      <td>114.0</td>\n","      <td>8.0</td>\n","      <td>18.0</td>\n","      <td>51.75</td>\n","      <td>42.310608</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-06-17</td>\n","      <td>110.0</td>\n","      <td>77.0</td>\n","      <td>81.0</td>\n","      <td>1.074074</td>\n","      <td>87.0</td>\n","      <td>86.0</td>\n","      <td>24.0</td>\n","      <td>72.0</td>\n","      <td>37.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.222222</td>\n","      <td>21.420540</td>\n","      <td>24.0</td>\n","      <td>31.0</td>\n","      <td>39.0</td>\n","      <td>16.0</td>\n","      <td>27.50</td>\n","      <td>8.500000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-06-18</td>\n","      <td>80.0</td>\n","      <td>53.0</td>\n","      <td>57.0</td>\n","      <td>1.052632</td>\n","      <td>60.0</td>\n","      <td>60.0</td>\n","      <td>20.0</td>\n","      <td>48.0</td>\n","      <td>30.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.888889</td>\n","      <td>16.589451</td>\n","      <td>15.0</td>\n","      <td>17.0</td>\n","      <td>14.0</td>\n","      <td>34.0</td>\n","      <td>20.00</td>\n","      <td>8.154754</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b713719-d62b-47e4-84cd-bff69d2f0478')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b713719-d62b-47e4-84cd-bff69d2f0478 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b713719-d62b-47e4-84cd-bff69d2f0478');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-43b83790-5b85-4096-b62a-7a2c45ca0786\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43b83790-5b85-4096-b62a-7a2c45ca0786')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-43b83790-5b85-4096-b62a-7a2c45ca0786 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset"}},"metadata":{},"execution_count":23}],"source":["#Reading the data set, parsing the dates and inferring the date format to date time. We also fill the Nan’s with 0.\n","#agrego index_col=0 para solucionar Unnamed: 0 porque https://stackoverflow.com/questions/43983622/remove-unnamed-columns-in-pandas-dataframe\n","dataset = read_csv(\"/content/drive/MyDrive/a Tesis de Grado/Tesis Versiones/tesis 2024/GA4/editorial unam/preprocesamiento/datos2023/editorialGA4Salida14Jun2022.csv\", index_col=0)\n","#dataset.fillna(0, inplace=True)//pasar nans a ceros\n","#revisar lo que hago en el otro dataset\n","print(dataset.size)\n","print(dataset.columns)\n","columnaAPreadecir='Número de vistas de página'\n","\n","for i in dataset.columns:\n","  if i != 'Fecha':\n","    dataset[i]= dataset[i].values.astype('float32')# ensure all data is float excepto la columna fecha\n","    #print(i,dataset[i].dtype)\n","print(dataset['Fecha'])\n","import datetime as dt\n","#print(pd.to_datetime(\"20 agos 2015\", format='%d %b %Y', date_parser=dateparser.parse))\n","from dateutil.parser import parse\n","def parsefecha(date):\n","  dt = parse(date)\n","  print(date)\n","  return date\n","mapping_dict = {'ene':'JAN',\n","'feb':'FEB',\n","'mar':'MAR',\n","'abr':'APR',\n","'may':'MAY',\n","'jun':'JUN',\n","'jul':'JUL',\n","'ago':'AUG',\n","'sept':'SEP',\n","'oct':'OCT',\n","'nov':'NOV',\n","'dic':'DEC'}#https://stackoverflow.com/questions/70374750/convert-spanish-date-into-a-pandas-datetime-object\n","dataset[\"Fecha\"]=pd.to_datetime(dataset[\"Fecha\"].replace(mapping_dict, regex=True))#esto porque las fechas como agosto estan ago en español\n","print(dataset[\"Fecha\"].dtype)\n","#dataset['Fecha'] = pd.to_datetime(dataset['Fecha'], format='%d %b %Y')\n","#dataset['Fecha']=dataset['Fecha'].apply(parsefecha)\n","#dataset.drop([\"Fecha Inicio\"], inplace=True, axis=1)\n","#for i in dataset[\"Fecha\"]:\n","#  print(i,dataset[\"Fecha\"].dtype)\n","print(dataset.shape)\n","print(dataset)\n","dataset.head()"]},{"cell_type":"code","source":["# import libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.neighbors import NearestNeighbors\n","from copy import deepcopy\n","print('algun nan antes de sacar fechas',dataset.isnull().values.any())\n","#fechaColumna=deepcopy(dataset['Fecha'])\n","#dataset.drop([\"Fecha\"], inplace=True, axis=1)\n","#X = dataset.values\n","#compruebo no hay ni un solo valor NaN en el dataset\n","print('algun nan',dataset.isnull().any())\n","print('algun nan',dataset.isnull().values.any())\n","nan_index = np.where(dataset.isnull())\n","nan_row=dataset.iloc[nan_index]\n","nan_row"],"metadata":{"id":"XmgXZt9_rj5x","executionInfo":{"status":"ok","timestamp":1730212460639,"user_tz":180,"elapsed":98,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"colab":{"base_uri":"https://localhost:8080/","height":697},"outputId":"16e88a22-a07e-4c1e-a7bc-1ca6d879ae9e"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["algun nan antes de sacar fechas True\n","algun nan Fecha                                            False\n","Número de vistas de página                       False\n","Usuarios nuevos                                  False\n","Usuarios                                         False\n","Número de sesiones por usuario                    True\n","Sesiones                                         False\n","Argentina                                        False\n","Otros Paises                                     False\n","mobile                                           False\n","desktop                                          False\n","tablet                                           False\n","Categoría de dispositivo promedio                False\n","Categoría de dispositivo std                     False\n","Android                                          False\n","Windows                                          False\n","Macintosh                                        False\n","iOS                                              False\n","Linux                                            False\n","Chrome OS                                        False\n","Sistema operativo (not set)                      False\n","Sistema operativo promedio                       False\n","Sistema operativo std                            False\n","Organic Search                                   False\n","Direct                                           False\n","Referral                                         False\n","Social                                           False\n","Agrupación de canales predeterminada promedio    False\n","Agrupación de canales predeterminada std         False\n","dtype: bool\n","algun nan True\n"]},{"output_type":"execute_result","data":{"text/plain":["     Número de sesiones por usuario  Número de sesiones por usuario\n","116                             NaN                             NaN\n","279                             NaN                             NaN"],"text/html":["\n","  <div id=\"df-7c97fc60-6513-41ea-a8e4-af0efd1a9332\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Número de sesiones por usuario</th>\n","      <th>Número de sesiones por usuario</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>116</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>279</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c97fc60-6513-41ea-a8e4-af0efd1a9332')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7c97fc60-6513-41ea-a8e4-af0efd1a9332 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7c97fc60-6513-41ea-a8e4-af0efd1a9332');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-25f21533-8846-4cf3-9859-5638b2eac5d0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25f21533-8846-4cf3-9859-5638b2eac5d0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-25f21533-8846-4cf3-9859-5638b2eac5d0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8a0e7862-6d9e-4d6e-ba7b-67b3ddec6683\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('nan_row')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8a0e7862-6d9e-4d6e-ba7b-67b3ddec6683 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('nan_row');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"nan_row","summary":"{\n  \"name\": \"nan_row\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"N\\u00famero de sesiones por usuario\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\\u00famero de sesiones por usuario\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["#dado que detecto nans los reemplazo por la media de su column\n","dataset.fillna(dataset.mean(), inplace=True)\n","#dado que detecto nans en la ultima fila borro esa columna\n","dataset=dataset[:-1]\n","#quito la fecha\n","fechaColumna=deepcopy(dataset['Fecha'])\n","dataset.drop([\"Fecha\"], inplace=True, axis=1)\n","X = dataset.values\n","#compruebo nuevamente que no haya ni un solo valor NaN en el dataset\n","print('algun nan',dataset.isnull().any())\n","print('algun nan',dataset.isnull().values.any())\n","nan_index = np.where(dataset.isnull())\n","nan_row=dataset.iloc[nan_index]\n","nan_row"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":736},"id":"66TjNkKRqi_W","executionInfo":{"status":"ok","timestamp":1730212460640,"user_tz":180,"elapsed":91,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"3622967b-6da9-4183-8890-6d4fcfbb1233"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["algun nan Número de vistas de página                       False\n","Usuarios nuevos                                  False\n","Usuarios                                         False\n","Número de sesiones por usuario                   False\n","Sesiones                                         False\n","Argentina                                        False\n","Otros Paises                                     False\n","mobile                                           False\n","desktop                                          False\n","tablet                                           False\n","Categoría de dispositivo promedio                False\n","Categoría de dispositivo std                     False\n","Android                                          False\n","Windows                                          False\n","Macintosh                                        False\n","iOS                                              False\n","Linux                                            False\n","Chrome OS                                        False\n","Sistema operativo (not set)                      False\n","Sistema operativo promedio                       False\n","Sistema operativo std                            False\n","Organic Search                                   False\n","Direct                                           False\n","Referral                                         False\n","Social                                           False\n","Agrupación de canales predeterminada promedio    False\n","Agrupación de canales predeterminada std         False\n","dtype: bool\n","algun nan False\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-25-7e75d467324b>:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  dataset.drop([\"Fecha\"], inplace=True, axis=1)\n"]},{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: []\n","Index: []"],"text/html":["\n","  <div id=\"df-423d15bf-1a46-4848-9dcb-1b3481857351\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-423d15bf-1a46-4848-9dcb-1b3481857351')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-423d15bf-1a46-4848-9dcb-1b3481857351 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-423d15bf-1a46-4848-9dcb-1b3481857351');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_99c8aeb5-24fc-468e-8830-f889f9a2caae\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('nan_row')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_99c8aeb5-24fc-468e-8830-f889f9a2caae button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('nan_row');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"nan_row","summary":"{\n  \"name\": \"nan_row\",\n  \"rows\": 0,\n  \"fields\": []\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# instantiate model\n","nbrs = NearestNeighbors(n_neighbors = 7,metric='euclidean')#con 5\n","\n","# fit model\n","nbrs.fit(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"bz0jdqGYuyEe","executionInfo":{"status":"ok","timestamp":1730212460641,"user_tz":180,"elapsed":82,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"09702918-7308-4084-ac85-212ce7d56ac9"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["NearestNeighbors(metric='euclidean', n_neighbors=7)"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>NearestNeighbors(metric=&#x27;euclidean&#x27;, n_neighbors=7)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;NearestNeighbors<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.NearestNeighbors.html\">?<span>Documentation for NearestNeighbors</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>NearestNeighbors(metric=&#x27;euclidean&#x27;, n_neighbors=7)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# distances and indexes of k-neaighbors from model outputs\n","distances, indexes = nbrs.kneighbors(X)\n","# plot mean of k-distances of each observation\n","media_distancias=distances.mean(axis =1)\n","plt.plot(media_distancias)\n","media=np.mean(media_distancias)\n","desvio_distancias= np.std(media_distancias)\n","desvio_distancias_array=np.arange(0,len(media_distancias)-1)\n","desvio_distancias_array2=deepcopy(desvio_distancias_array)\n","desvio_distancias_array.fill(desvio_distancias)\n","desvio_distancias_array2.fill(desvio_distancias*2)\n","plt.plot(media+desvio_distancias_array)\n","plt.plot(media+desvio_distancias_array2)\n","print('desvio_distancias',desvio_distancias,media,desvio_distancias,desvio_distancias*2,media+desvio_distancias*2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"y_XAyT6bu4e9","executionInfo":{"status":"ok","timestamp":1730212460642,"user_tz":180,"elapsed":78,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"dbc81e87-9025-49cd-de43-ad54bd866944"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["desvio_distancias 51.170472625527815 39.81832193999932 51.170472625527815 102.34094525105563 142.15926719105494\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# visually determine cutoff values > 0.15\n","outlier_index = np.where(distances.mean(axis = 1) >400)\n","outlier_index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Njr9K975u_Tm","executionInfo":{"status":"ok","timestamp":1730212460645,"user_tz":180,"elapsed":73,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"e83818e2-abd6-4ff6-9df5-ecedf49ac46c"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 63, 276]),)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["# filter outlier values\n","outlier_values = dataset.iloc[outlier_index]\n","outlier_values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":231},"id":"AeTv2n2hvApZ","executionInfo":{"status":"ok","timestamp":1730212460646,"user_tz":180,"elapsed":69,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"cd590343-1f04-4de5-bdbf-6a2e1ff73e85"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","63                        627.0             99.0     122.0   \n","276                       741.0             68.0      98.0   \n","\n","     Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","63                         1.403509     160.0      617.0          10.0   \n","276                        1.372340     129.0      728.0          13.0   \n","\n","     mobile  desktop  tablet  ...  Chrome OS  Sistema operativo (not set)  \\\n","63    485.0    142.0     0.0  ...        2.0                          0.0   \n","276   165.0    576.0     0.0  ...        0.0                          0.0   \n","\n","     Sistema operativo promedio  Sistema operativo std  Organic Search  \\\n","63                    69.666664             138.157715           389.0   \n","276                   82.333336             179.456589           594.0   \n","\n","     Direct  Referral  Social  Agrupación de canales predeterminada promedio  \\\n","63    220.0      13.0     5.0                                         156.75   \n","276    80.0      11.0    56.0                                         185.25   \n","\n","     Agrupación de canales predeterminada std  \n","63                                 159.399460  \n","276                                237.288193  \n","\n","[2 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-daba2d4d-8716-48d2-9799-c5f20ab3fc3d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Número de vistas de página</th>\n","      <th>Usuarios nuevos</th>\n","      <th>Usuarios</th>\n","      <th>Número de sesiones por usuario</th>\n","      <th>Sesiones</th>\n","      <th>Argentina</th>\n","      <th>Otros Paises</th>\n","      <th>mobile</th>\n","      <th>desktop</th>\n","      <th>tablet</th>\n","      <th>...</th>\n","      <th>Chrome OS</th>\n","      <th>Sistema operativo (not set)</th>\n","      <th>Sistema operativo promedio</th>\n","      <th>Sistema operativo std</th>\n","      <th>Organic Search</th>\n","      <th>Direct</th>\n","      <th>Referral</th>\n","      <th>Social</th>\n","      <th>Agrupación de canales predeterminada promedio</th>\n","      <th>Agrupación de canales predeterminada std</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>63</th>\n","      <td>627.0</td>\n","      <td>99.0</td>\n","      <td>122.0</td>\n","      <td>1.403509</td>\n","      <td>160.0</td>\n","      <td>617.0</td>\n","      <td>10.0</td>\n","      <td>485.0</td>\n","      <td>142.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>69.666664</td>\n","      <td>138.157715</td>\n","      <td>389.0</td>\n","      <td>220.0</td>\n","      <td>13.0</td>\n","      <td>5.0</td>\n","      <td>156.75</td>\n","      <td>159.399460</td>\n","    </tr>\n","    <tr>\n","      <th>276</th>\n","      <td>741.0</td>\n","      <td>68.0</td>\n","      <td>98.0</td>\n","      <td>1.372340</td>\n","      <td>129.0</td>\n","      <td>728.0</td>\n","      <td>13.0</td>\n","      <td>165.0</td>\n","      <td>576.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>82.333336</td>\n","      <td>179.456589</td>\n","      <td>594.0</td>\n","      <td>80.0</td>\n","      <td>11.0</td>\n","      <td>56.0</td>\n","      <td>185.25</td>\n","      <td>237.288193</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows × 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-daba2d4d-8716-48d2-9799-c5f20ab3fc3d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-daba2d4d-8716-48d2-9799-c5f20ab3fc3d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-daba2d4d-8716-48d2-9799-c5f20ab3fc3d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9624321c-2dfa-4be5-bc69-3121e4fa52f6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9624321c-2dfa-4be5-bc69-3121e4fa52f6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9624321c-2dfa-4be5-bc69-3121e4fa52f6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b50a4b2c-8758-41da-a3ba-899cfea31bd6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('outlier_values')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b50a4b2c-8758-41da-a3ba-899cfea31bd6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('outlier_values');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"outlier_values"}},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["plt.scatter(dataset['Número de vistas de página'],dataset['Sesiones'])\n","plt.scatter(outlier_values['Número de vistas de página'], outlier_values['Sesiones'], color = \"r\")\n","#Número de vistas de página X Usuarios nuevos"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"lopz_66pwCGJ","executionInfo":{"status":"ok","timestamp":1730212460648,"user_tz":180,"elapsed":67,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"23197b4b-eca9-4d70-c676-0198799989cf"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7b5ed5084a00>"]},"metadata":{},"execution_count":30},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.scatter(dataset['Número de vistas de página'],dataset['Usuarios nuevos'])\n","plt.scatter(outlier_values['Número de vistas de página'], outlier_values['Usuarios nuevos'], color = \"r\")"],"metadata":{"id":"dZX7fFVTn1vz","colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"status":"ok","timestamp":1730212461431,"user_tz":180,"elapsed":55,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"5651ff65-e660-4af3-b5ed-9149f6c3c391"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7b5ed4896cb0>"]},"metadata":{},"execution_count":31},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","#agregar columna fecha Nuevamente\n","dataset['Fecha']=fechaColumna\n","outlier_index[0]"],"metadata":{"id":"xvFwGdCm4Wpx","executionInfo":{"status":"ok","timestamp":1730212461433,"user_tz":180,"elapsed":34,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"034bfa8f-0870-40f7-fb09-78d699be0486"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 63, 276])"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["dataset = dataset.drop(outlier_index[0])\n","#dataset = dataset.drop('BlackBerry', axis=1) No tiene Blackberry\n","\n","print(dataset.values.shape)\n","#print(update_df.values.shape)\n","#dataset=update_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UfOuPtBozlVK","executionInfo":{"status":"ok","timestamp":1730212462780,"user_tz":180,"elapsed":15,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"0de4698a-ccb9-40d4-f8da-e570549996e9"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["(582, 28)\n"]}]},{"cell_type":"code","source":["# Definimos las ventanas basadas en la secuencia de Fibonacci (6, 12, 18, 30, 48...)\n","from sklearn.impute import SimpleImputer\n","df=deepcopy(dataset)\n","ventanas = [6, 12, 18, 30, 48, 78, 126, 203, 329]\n","columna='Número de vistas de página'\n","# Calcular la mediana móvil (rolling median) para cada ventana y agregarla como una columna nueva en el DataFrame\n","df.drop([\"Fecha\"], inplace=True, axis=1)\n","# Calcular la mediana móvil (rolling median) para cada ventana y agregarla como una columna nueva en el DataFrame\n","for ventana in ventanas:\n","    df[f'rolling_median_{ventana}'] = df[columna].rolling(window=ventana).median()\n","\n","# Reemplazar los NaNs en las columnas de medianas móviles con la media de cada columna\n","for ventana in ventanas:\n","    col = f'rolling_median_{ventana}'\n","    df[col].fillna(df[col].mean(), inplace=True)\n","\n","# Calcular la mediana de las medianas (por fila) y agregarla como una nueva columna\n","df['mediana_de_medianas'] = df[[f'rolling_median_{v}' for v in ventanas]].median(axis=1)\n","\n","# Mostrar el DataFrame resultante\n","print(df)\n","\n","dataset['mediana_de_medianas']=df['mediana_de_medianas']"],"metadata":{"id":"6J8b22BSjGuJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730212471853,"user_tz":180,"elapsed":481,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"89b96917-f0c2-4d62-c577-a4f330176245"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["     Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0                          71.0             39.0      39.0   \n","1                         279.0            142.0     147.0   \n","2                         207.0            103.0     117.0   \n","3                         110.0             77.0      81.0   \n","4                          80.0             53.0      57.0   \n","..                          ...              ...       ...   \n","579                        82.0             25.0      28.0   \n","580                        19.0              8.0       9.0   \n","581                        48.0             13.0      18.0   \n","582                       140.0             18.0      23.0   \n","583                        55.0             27.0      30.0   \n","\n","     Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","0                          1.205128      47.0       70.0           1.0   \n","1                          1.156463     170.0      222.0          57.0   \n","2                          1.230769     144.0      174.0          33.0   \n","3                          1.074074      87.0       86.0          24.0   \n","4                          1.052632      60.0       60.0          20.0   \n","..                              ...       ...        ...           ...   \n","579                        1.153846      30.0       74.0           8.0   \n","580                        1.125000       9.0       15.0           4.0   \n","581                        1.375000      22.0       44.0           4.0   \n","582                        1.318182      29.0       31.0         109.0   \n","583                        1.066667      32.0       36.0          19.0   \n","\n","     mobile  desktop  tablet  ...  rolling_median_6  rolling_median_12  \\\n","0      37.0     34.0     0.0  ...        113.835355         110.752189   \n","1     155.0    124.0     0.0  ...        113.835355         110.752189   \n","2     124.0     81.0     2.0  ...        113.835355         110.752189   \n","3      72.0     37.0     1.0  ...        113.835355         110.752189   \n","4      48.0     30.0     2.0  ...        113.835355         110.752189   \n","..      ...      ...     ...  ...               ...                ...   \n","579    14.0     68.0     0.0  ...         50.500000          63.500000   \n","580    17.0      2.0     0.0  ...         50.500000          62.000000   \n","581    12.0     36.0     0.0  ...         44.000000          62.000000   \n","582    14.0    126.0     0.0  ...         60.500000          62.000000   \n","583    12.0     41.0     2.0  ...         64.000000          58.000000   \n","\n","     rolling_median_18  rolling_median_30  rolling_median_48  \\\n","0            109.39115         107.200723         106.905607   \n","1            109.39115         107.200723         106.905607   \n","2            109.39115         107.200723         106.905607   \n","3            109.39115         107.200723         106.905607   \n","4            109.39115         107.200723         106.905607   \n","..                 ...                ...                ...   \n","579           62.00000          49.000000          61.500000   \n","580           61.00000          46.000000          61.500000   \n","581           54.50000          46.000000          61.000000   \n","582           61.00000          48.000000          61.000000   \n","583           61.00000          49.000000          61.000000   \n","\n","     rolling_median_78  rolling_median_126  rolling_median_203  \\\n","0           105.235644          102.966083          103.678947   \n","1           105.235644          102.966083          103.678947   \n","2           105.235644          102.966083          103.678947   \n","3           105.235644          102.966083          103.678947   \n","4           105.235644          102.966083          103.678947   \n","..                 ...                 ...                 ...   \n","579          78.500000          102.000000          107.000000   \n","580          75.500000          102.000000          107.000000   \n","581          75.500000          102.000000          107.000000   \n","582          78.500000          102.000000          107.000000   \n","583          75.500000          101.000000          104.000000   \n","\n","     rolling_median_329  mediana_de_medianas  \n","0            105.633858           106.905607  \n","1            105.633858           106.905607  \n","2            105.633858           106.905607  \n","3            105.633858           106.905607  \n","4            105.633858           106.905607  \n","..                  ...                  ...  \n","579          121.000000            63.500000  \n","580          120.000000            62.000000  \n","581          120.000000            62.000000  \n","582          120.000000            62.000000  \n","583          120.000000            64.000000  \n","\n","[582 rows x 37 columns]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-34-8847db652abb>:15: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[col].fillna(df[col].mean(), inplace=True)\n"]}]},{"cell_type":"code","source":["#agregar lagged datapints\n","#df=deepcopy(dataset)\n","columna='Número de vistas de página'\n","lags=[int(3*30), int(30*6), int(30*9), int(30*12)]\n","for lag in lags:\n","    dataset[f'lag_{lag}'] = dataset[columna].shift(lag)\n","#dataset=dataset[[f'lag_{lag}' for lag in lags]]\n","# Reemplazar los NaNs en las columnas de medianas móviles con la media de cada columna\n","for lag in lags:\n","    col = f'lag_{lag}'\n","    dataset[col].fillna(dataset[col].mean(), inplace=True)\n","    '''The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","    For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","    '''\n","ver=dataset[[f'lag_{lag}' for lag in lags]]\n","ver"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"4bOo95xqAxiO","executionInfo":{"status":"ok","timestamp":1730212478938,"user_tz":180,"elapsed":520,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"f97c4bc3-1562-4f54-e079-822426269db3"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-35-261476a2b0dd>:11: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  dataset[col].fillna(dataset[col].mean(), inplace=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["         lag_90     lag_180     lag_270    lag_360\n","0    124.827232  120.169151  118.391029  97.396393\n","1    124.827232  120.169151  118.391029  97.396393\n","2    124.827232  120.169151  118.391029  97.396393\n","3    124.827232  120.169151  118.391029  97.396393\n","4    124.827232  120.169151  118.391029  97.396393\n","..          ...         ...         ...        ...\n","579   43.000000   63.000000  272.000000  25.000000\n","580   36.000000  174.000000  286.000000  47.000000\n","581  184.000000   91.000000  202.000000  39.000000\n","582  154.000000  241.000000  276.000000  25.000000\n","583  328.000000  204.000000  169.000000  27.000000\n","\n","[582 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-596816fe-fd8f-4a1b-9226-a0cc98042fa5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lag_90</th>\n","      <th>lag_180</th>\n","      <th>lag_270</th>\n","      <th>lag_360</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>124.827232</td>\n","      <td>120.169151</td>\n","      <td>118.391029</td>\n","      <td>97.396393</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>124.827232</td>\n","      <td>120.169151</td>\n","      <td>118.391029</td>\n","      <td>97.396393</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>124.827232</td>\n","      <td>120.169151</td>\n","      <td>118.391029</td>\n","      <td>97.396393</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>124.827232</td>\n","      <td>120.169151</td>\n","      <td>118.391029</td>\n","      <td>97.396393</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>124.827232</td>\n","      <td>120.169151</td>\n","      <td>118.391029</td>\n","      <td>97.396393</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>579</th>\n","      <td>43.000000</td>\n","      <td>63.000000</td>\n","      <td>272.000000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>580</th>\n","      <td>36.000000</td>\n","      <td>174.000000</td>\n","      <td>286.000000</td>\n","      <td>47.000000</td>\n","    </tr>\n","    <tr>\n","      <th>581</th>\n","      <td>184.000000</td>\n","      <td>91.000000</td>\n","      <td>202.000000</td>\n","      <td>39.000000</td>\n","    </tr>\n","    <tr>\n","      <th>582</th>\n","      <td>154.000000</td>\n","      <td>241.000000</td>\n","      <td>276.000000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>583</th>\n","      <td>328.000000</td>\n","      <td>204.000000</td>\n","      <td>169.000000</td>\n","      <td>27.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>582 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-596816fe-fd8f-4a1b-9226-a0cc98042fa5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-596816fe-fd8f-4a1b-9226-a0cc98042fa5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-596816fe-fd8f-4a1b-9226-a0cc98042fa5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdb2c9f3-b6b9-4765-99ec-c130f802fce6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdb2c9f3-b6b9-4765-99ec-c130f802fce6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdb2c9f3-b6b9-4765-99ec-c130f802fce6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e6c51d67-0d35-4d0c-94b7-c3f8595e4141\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ver')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e6c51d67-0d35-4d0c-94b7-c3f8595e4141 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ver');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ver","summary":"{\n  \"name\": \"ver\",\n  \"rows\": 582,\n  \"fields\": [\n    {\n      \"column\": \"lag_90\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 239,\n        \"samples\": [\n          127.0,\n          61.0,\n          31.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lag_180\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 214,\n        \"samples\": [\n          143.0,\n          224.0,\n          60.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lag_270\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 188,\n        \"samples\": [\n          270.0,\n          68.0,\n          120.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lag_360\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 150,\n        \"samples\": [\n          43.0,\n          120.0,\n          140.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["print('algun nan\\n',dataset.isnull().any(),'\\n')\n","#print('algun nan',dataset.isnull().values.any(),'\\n')\n","#nan_index = np.where(dataset.isnull().values.any())\n","\n","#nan_index2 = np.where(dataset['Predictor Flag'].isnull())\n","#nan_row=dataset.iloc[nan_index2]\n","#nan_row\n","\n","nan_index = np.where(np.atleast_1d(dataset.isnull().values.any()))\n","\n","#np.where() devuelve una tupla de arrays, por lo que puedes acceder al primer elemento\n","# que contendrá los índices de los valores nan, si los hay\n","dataset=dataset.dropna()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0kss6QwG6dqB","executionInfo":{"status":"ok","timestamp":1730212480810,"user_tz":180,"elapsed":6,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"12f94933-de4e-4633-9d83-f1a674cf19b4"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["algun nan\n"," Número de vistas de página                       False\n","Usuarios nuevos                                  False\n","Usuarios                                         False\n","Número de sesiones por usuario                   False\n","Sesiones                                         False\n","Argentina                                        False\n","Otros Paises                                     False\n","mobile                                           False\n","desktop                                          False\n","tablet                                           False\n","Categoría de dispositivo promedio                False\n","Categoría de dispositivo std                     False\n","Android                                          False\n","Windows                                          False\n","Macintosh                                        False\n","iOS                                              False\n","Linux                                            False\n","Chrome OS                                        False\n","Sistema operativo (not set)                      False\n","Sistema operativo promedio                       False\n","Sistema operativo std                            False\n","Organic Search                                   False\n","Direct                                           False\n","Referral                                         False\n","Social                                           False\n","Agrupación de canales predeterminada promedio    False\n","Agrupación de canales predeterminada std         False\n","Fecha                                            False\n","mediana_de_medianas                              False\n","lag_90                                           False\n","lag_180                                          False\n","lag_270                                          False\n","lag_360                                          False\n","dtype: bool \n","\n"]}]},{"cell_type":"code","source":["dataset.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xdPx3I5H6_eV","executionInfo":{"status":"ok","timestamp":1730212483121,"user_tz":180,"elapsed":510,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"69d7bebe-8c3c-4f60-bb4b-87840df7b839"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Android', 'Windows', 'Macintosh', 'iOS', 'Linux', 'Chrome OS',\n","       'Sistema operativo (not set)', 'Sistema operativo promedio',\n","       'Sistema operativo std', 'Organic Search', 'Direct', 'Referral',\n","       'Social', 'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'Fecha',\n","       'mediana_de_medianas', 'lag_90', 'lag_180', 'lag_270', 'lag_360'],\n","      dtype='object')"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# agregar medianas\n","#\"NO ACTUALIZADO TODAVIA FIHARSE 29-10-2024\n","dataset['Tizen'] = 0\n","dataset['Windows Phone'] = 0\n","dataset['mediana Dispositivos'] = dataset[['mobile', 'desktop', 'tablet']].median(axis=1)\n","dataset['mediana Sistema operativo'] = dataset[['Windows', 'Android', 'Linux',\n","       'Macintosh', 'Sistema operativo (not set)', 'iOS', 'Windows Phone',\n","       'Chrome OS', 'Tizen']].median(axis=1)\n","dataset['mediana Agrupación de canales predeterminada'] = dataset[['Organic Search', 'Social', 'Direct',\n","       'Referral']].median(axis=1)"],"metadata":{"id":"M2w8Q_k4BHbQ","executionInfo":{"status":"ok","timestamp":1730212826711,"user_tz":180,"elapsed":521,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["dataset.drop([\"Fecha\"], inplace=True, axis=1)\n","\n","print(dataset.columns)\n","print(dataset.shape)\n","dfPrueba=deepcopy(dataset)\n","dfPrueba=dfPrueba.loc[:, ('Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Windows', 'Android', 'Linux', 'Macintosh',\n","       'Sistema operativo (not set)', 'iOS', 'Windows Phone', 'Chrome OS',\n","       'Tizen', 'Sistema operativo promedio', 'Sistema operativo std',\n","       'Organic Search', 'Social', 'Direct', 'Referral',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'mediana Dispositivos',\n","       'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada') ]\n","dataset=dfPrueba\n","dataset.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o5VvAgdgAFZ2","executionInfo":{"status":"ok","timestamp":1730212829745,"user_tz":180,"elapsed":639,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"548d157c-2afb-4baa-9ad1-ffc679cb1ef8"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Android', 'Windows', 'Macintosh', 'iOS', 'Linux', 'Chrome OS',\n","       'Sistema operativo (not set)', 'Sistema operativo promedio',\n","       'Sistema operativo std', 'Organic Search', 'Direct', 'Referral',\n","       'Social', 'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'Tizen', 'Windows Phone',\n","       'mediana Dispositivos', 'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada'],\n","      dtype='object')\n","(582, 37)\n"]},{"output_type":"execute_result","data":{"text/plain":["Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Windows', 'Android', 'Linux', 'Macintosh',\n","       'Sistema operativo (not set)', 'iOS', 'Windows Phone', 'Chrome OS',\n","       'Tizen', 'Sistema operativo promedio', 'Sistema operativo std',\n","       'Organic Search', 'Social', 'Direct', 'Referral',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'mediana Dispositivos',\n","       'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada'],\n","      dtype='object')"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["\n","print(dataset)\n","salidaCarpeta=\"/content/drive/MyDrive/a Tesis de Grado/Tesis Versiones/tesis 2024/GA4/editorial unam/preprocesamiento/outlier/salidaCSV\"\n","NombreArchivoCSV=\"/salidaKNN2024EditorialUniversitariaGA4.csv\"\n","dataset.to_csv(salidaCarpeta + NombreArchivoCSV)\n","print(dataset.columns)\n","print(len(dataset.columns))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQU30rGD4P13","executionInfo":{"status":"ok","timestamp":1730212923322,"user_tz":180,"elapsed":9,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"a349c1c0-cc41-483f-bd96-80f465de7729"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["     Número de vistas de página  Usuarios nuevos  Usuarios  \\\n","0                          71.0             39.0      39.0   \n","1                         279.0            142.0     147.0   \n","2                         207.0            103.0     117.0   \n","3                         110.0             77.0      81.0   \n","4                          80.0             53.0      57.0   \n","..                          ...              ...       ...   \n","579                        82.0             25.0      28.0   \n","580                        19.0              8.0       9.0   \n","581                        48.0             13.0      18.0   \n","582                       140.0             18.0      23.0   \n","583                        55.0             27.0      30.0   \n","\n","     Número de sesiones por usuario  Sesiones  Argentina  Otros Paises  \\\n","0                          1.205128      47.0       70.0           1.0   \n","1                          1.156463     170.0      222.0          57.0   \n","2                          1.230769     144.0      174.0          33.0   \n","3                          1.074074      87.0       86.0          24.0   \n","4                          1.052632      60.0       60.0          20.0   \n","..                              ...       ...        ...           ...   \n","579                        1.153846      30.0       74.0           8.0   \n","580                        1.125000       9.0       15.0           4.0   \n","581                        1.375000      22.0       44.0           4.0   \n","582                        1.318182      29.0       31.0         109.0   \n","583                        1.066667      32.0       36.0          19.0   \n","\n","     mobile  desktop  tablet  ...  \\\n","0      37.0     34.0     0.0  ...   \n","1     155.0    124.0     0.0  ...   \n","2     124.0     81.0     2.0  ...   \n","3      72.0     37.0     1.0  ...   \n","4      48.0     30.0     2.0  ...   \n","..      ...      ...     ...  ...   \n","579    14.0     68.0     0.0  ...   \n","580    17.0      2.0     0.0  ...   \n","581    12.0     36.0     0.0  ...   \n","582    14.0    126.0     0.0  ...   \n","583    12.0     41.0     2.0  ...   \n","\n","     Agrupación de canales predeterminada promedio  \\\n","0                                            17.75   \n","1                                            69.75   \n","2                                            51.75   \n","3                                            27.50   \n","4                                            20.00   \n","..                                             ...   \n","579                                          20.50   \n","580                                           4.75   \n","581                                          12.00   \n","582                                          35.00   \n","583                                          13.75   \n","\n","     Agrupación de canales predeterminada std  mediana_de_medianas  \\\n","0                                   17.210098           106.905607   \n","1                                   54.061886           106.905607   \n","2                                   42.310608           106.905607   \n","3                                    8.500000           106.905607   \n","4                                    8.154754           106.905607   \n","..                                        ...                  ...   \n","579                                 26.612967            63.500000   \n","580                                  4.866981            62.000000   \n","581                                 11.554220            62.000000   \n","582                                 47.544716            62.000000   \n","583                                 16.130329            64.000000   \n","\n","         lag_90     lag_180     lag_270    lag_360  mediana Dispositivos  \\\n","0    124.827232  120.169151  118.391029  97.396393                  34.0   \n","1    124.827232  120.169151  118.391029  97.396393                 124.0   \n","2    124.827232  120.169151  118.391029  97.396393                  81.0   \n","3    124.827232  120.169151  118.391029  97.396393                  37.0   \n","4    124.827232  120.169151  118.391029  97.396393                  30.0   \n","..          ...         ...         ...        ...                   ...   \n","579   43.000000   63.000000  272.000000  25.000000                  14.0   \n","580   36.000000  174.000000  286.000000  47.000000                   2.0   \n","581  184.000000   91.000000  202.000000  39.000000                  12.0   \n","582  154.000000  241.000000  276.000000  25.000000                  14.0   \n","583  328.000000  204.000000  169.000000  27.000000                  12.0   \n","\n","     mediana Sistema operativo  mediana Agrupación de canales predeterminada  \n","0                          0.0                                          12.0  \n","1                          0.0                                          61.5  \n","2                          3.0                                          42.5  \n","3                          0.0                                          27.5  \n","4                          1.0                                          16.0  \n","..                         ...                                           ...  \n","579                        1.0                                           8.5  \n","580                        0.0                                           4.0  \n","581                        0.0                                          11.5  \n","582                        0.0                                          11.5  \n","583                        0.0                                           7.5  \n","\n","[582 rows x 37 columns]\n","Index(['Número de vistas de página', 'Usuarios nuevos', 'Usuarios',\n","       'Número de sesiones por usuario', 'Sesiones', 'Argentina',\n","       'Otros Paises', 'mobile', 'desktop', 'tablet',\n","       'Categoría de dispositivo promedio', 'Categoría de dispositivo std',\n","       'Windows', 'Android', 'Linux', 'Macintosh',\n","       'Sistema operativo (not set)', 'iOS', 'Windows Phone', 'Chrome OS',\n","       'Tizen', 'Sistema operativo promedio', 'Sistema operativo std',\n","       'Organic Search', 'Social', 'Direct', 'Referral',\n","       'Agrupación de canales predeterminada promedio',\n","       'Agrupación de canales predeterminada std', 'mediana_de_medianas',\n","       'lag_90', 'lag_180', 'lag_270', 'lag_360', 'mediana Dispositivos',\n","       'mediana Sistema operativo',\n","       'mediana Agrupación de canales predeterminada'],\n","      dtype='object')\n","37\n"]}]},{"cell_type":"code","source":["#You can see the disk information using a command like !df -h.\n","#To see CPU specs, !cat /proc/cpuinfo.\n","#For memory, !cat /proc/meminfo.\n","!df -h"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"onASpT3BveCx","executionInfo":{"status":"ok","timestamp":1730212925492,"user_tz":180,"elapsed":543,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"dd9950cb-afaa-4d41-e0e2-c60627bc9814"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Filesystem      Size  Used Avail Use% Mounted on\n","overlay         226G   33G  194G  15% /\n","tmpfs            64M     0   64M   0% /dev\n","shm             5.8G     0  5.8G   0% /dev/shm\n","/dev/root       2.0G  1.2G  820M  59% /usr/sbin/docker-init\n","tmpfs           6.4G  348K  6.4G   1% /var/colab\n","/dev/sda1       233G   57G  176G  25% /etc/hosts\n","tmpfs           6.4G     0  6.4G   0% /proc/acpi\n","tmpfs           6.4G     0  6.4G   0% /proc/scsi\n","tmpfs           6.4G     0  6.4G   0% /sys/firmware\n","drive           100G   61G   40G  61% /content/drive\n"]}]},{"cell_type":"code","source":["!cat /proc/cpuinfo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GBED-xbTvezx","executionInfo":{"status":"ok","timestamp":1730212925493,"user_tz":180,"elapsed":27,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"e5f615da-de8d-43f9-ce79-8325492e91ff"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["processor\t: 0\n","vendor_id\t: GenuineIntel\n","cpu family\t: 6\n","model\t\t: 79\n","model name\t: Intel(R) Xeon(R) CPU @ 2.20GHz\n","stepping\t: 0\n","microcode\t: 0xffffffff\n","cpu MHz\t\t: 2199.998\n","cache size\t: 56320 KB\n","physical id\t: 0\n","siblings\t: 2\n","core id\t\t: 0\n","cpu cores\t: 1\n","apicid\t\t: 0\n","initial apicid\t: 0\n","fpu\t\t: yes\n","fpu_exception\t: yes\n","cpuid level\t: 13\n","wp\t\t: yes\n","flags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx smap xsaveopt arat md_clear arch_capabilities\n","bugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa mmio_stale_data retbleed bhi\n","bogomips\t: 4399.99\n","clflush size\t: 64\n","cache_alignment\t: 64\n","address sizes\t: 46 bits physical, 48 bits virtual\n","power management:\n","\n","processor\t: 1\n","vendor_id\t: GenuineIntel\n","cpu family\t: 6\n","model\t\t: 79\n","model name\t: Intel(R) Xeon(R) CPU @ 2.20GHz\n","stepping\t: 0\n","microcode\t: 0xffffffff\n","cpu MHz\t\t: 2199.998\n","cache size\t: 56320 KB\n","physical id\t: 0\n","siblings\t: 2\n","core id\t\t: 0\n","cpu cores\t: 1\n","apicid\t\t: 1\n","initial apicid\t: 1\n","fpu\t\t: yes\n","fpu_exception\t: yes\n","cpuid level\t: 13\n","wp\t\t: yes\n","flags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx smap xsaveopt arat md_clear arch_capabilities\n","bugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa mmio_stale_data retbleed bhi\n","bogomips\t: 4399.99\n","clflush size\t: 64\n","cache_alignment\t: 64\n","address sizes\t: 46 bits physical, 48 bits virtual\n","power management:\n","\n"]}]},{"cell_type":"code","source":["!cat /proc/meminfo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cnsMDJbXviOi","executionInfo":{"status":"ok","timestamp":1730212925494,"user_tz":180,"elapsed":19,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}},"outputId":"bbc1e5fc-c700-4fa4-fc68-ceef9c5f7bbd"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["MemTotal:       13290452 kB\n","MemFree:         7586200 kB\n","MemAvailable:   11359492 kB\n","Buffers:          471412 kB\n","Cached:          3439244 kB\n","SwapCached:            0 kB\n","Active:          1077596 kB\n","Inactive:        4280324 kB\n","Active(anon):       1600 kB\n","Inactive(anon):  1447588 kB\n","Active(file):    1075996 kB\n","Inactive(file):  2832736 kB\n","Unevictable:          20 kB\n","Mlocked:              20 kB\n","SwapTotal:             0 kB\n","SwapFree:              0 kB\n","Dirty:              1648 kB\n","Writeback:             0 kB\n","AnonPages:       1447284 kB\n","Mapped:           733264 kB\n","Shmem:              1912 kB\n","KReclaimable:     190128 kB\n","Slab:             236748 kB\n","SReclaimable:     190128 kB\n","SUnreclaim:        46620 kB\n","KernelStack:        7280 kB\n","PageTables:        27572 kB\n","SecPageTables:         0 kB\n","NFS_Unstable:          0 kB\n","Bounce:                0 kB\n","WritebackTmp:          0 kB\n","CommitLimit:     6645224 kB\n","Committed_AS:    4069156 kB\n","VmallocTotal:   34359738367 kB\n","VmallocUsed:       13640 kB\n","VmallocChunk:          0 kB\n","Percpu:             1120 kB\n","HardwareCorrupted:     0 kB\n","AnonHugePages:         0 kB\n","ShmemHugePages:        0 kB\n","ShmemPmdMapped:        0 kB\n","FileHugePages:         0 kB\n","FilePmdMapped:         0 kB\n","CmaTotal:              0 kB\n","CmaFree:               0 kB\n","Unaccepted:            0 kB\n","HugePages_Total:       0\n","HugePages_Free:        0\n","HugePages_Rsvd:        0\n","HugePages_Surp:        0\n","Hugepagesize:       2048 kB\n","Hugetlb:               0 kB\n","DirectMap4k:       74552 kB\n","DirectMap2M:     5165056 kB\n","DirectMap1G:    10485760 kB\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"2nVF3ps4CcxN","executionInfo":{"status":"ok","timestamp":1730212925495,"user_tz":180,"elapsed":12,"user":{"displayName":"Enrique Gauto Sand","userId":"16871957759988522994"}}},"execution_count":43,"outputs":[]}],"metadata":{"colab":{"provenance":[],"mount_file_id":"1hY27r8KHPAk4ZWqf0755rJADf2HXVSKo","authorship_tag":"ABX9TyMcixxzzdrXD1YKRWsHp9SD"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}